{
    "version": "https://jsonfeed.org/version/1",
    "title": "玖忆 • All posts by \"node.js\" category",
    "description": "我本微末凡尘、可也心向天空",
    "home_page_url": "https://wait-you.github.io",
    "items": [
        {
            "id": "https://wait-you.github.io/2023/06/06/Node-js/",
            "url": "https://wait-you.github.io/2023/06/06/Node-js/",
            "title": "Node.js",
            "date_published": "2023-06-06T01:02:34.000Z",
            "content_html": "<h1 id=\"nodejs\"><a class=\"markdownIt-Anchor\" href=\"#nodejs\">#</a> Node.js</h1>\n<h2 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h2>\n<ul>\n<li>\n<p>一句话介绍</p>\n<ul>\n<li>Node.js 是一个基于 <code>Chrome V8</code>  引擎的 <code>JavaScript\t</code> 运行时</li>\n</ul>\n</li>\n<li>\n<p>js 运行时，也叫 js 执行环境</p>\n<ul>\n<li>编写 js 代码 -&gt; html -&gt; 浏览器\n<ul>\n<li>浏览器为什么可以解析一个 网页？\n<ul>\n<li>UI 渲染引擎</li>\n<li>JS 执行引擎</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>主要目的</p>\n<ul>\n<li>是为了让 js 在其他地方执行，应对各种业务\n<ul>\n<li>web 服务开发\n<ul>\n<li>游戏服务器</li>\n<li>接口服务器</li>\n<li>…</li>\n</ul>\n</li>\n<li>构建工具</li>\n<li>命令行工具\n<ul>\n<li>npm</li>\n<li>git</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>node 相当于将引擎单独封装，所以他可以识别 es 语法部分，但无法识别 DOM 和 BOM</p>\n</li>\n</ul>\n<h2 id=\"初体验\"><a class=\"markdownIt-Anchor\" href=\"#初体验\">#</a> 初体验</h2>\n<ul>\n<li>\n<p>准备代码</p>\n<ul>\n<li>\n<p>创建一个单独的 js 文件</p>\n</li>\n<li>\n<p>代码内容</p>\n<ul>\n<li>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr></table></figure></div></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"版本管理nvm\"><a class=\"markdownIt-Anchor\" href=\"#版本管理nvm\">#</a> 版本管理 NVM</h2>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h3>\n<ul>\n<li>nvm 操作\n<ul>\n<li>查看版本\n<ul>\n<li><code>nvm -v</code></li>\n</ul>\n</li>\n<li>查看 / 設置根路徑\n<ul>\n<li><code>nvm root [path]</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Node.js 版本操作\n<ul>\n<li>查看全部安裝版本\n<ul>\n<li><code>nvm ls</code></li>\n</ul>\n</li>\n<li>查看全部可安裝版本\n<ul>\n<li><code>nvm ls-remote</code></li>\n</ul>\n</li>\n<li>安裝指定版本 Node.js\n<ul>\n<li><code>nvm install &lt;version&gt;</code></li>\n</ul>\n</li>\n<li>卸載指定版本 Node.js\n<ul>\n<li><code>nvm uninstall &lt;version&gt;</code></li>\n</ul>\n</li>\n<li>安裝最新長期支持版本\n<ul>\n<li><code>nvm install --lts</code></li>\n</ul>\n</li>\n<li>切換指定版本 Node.js\n<ul>\n<li><code>nvm use node &lt;version&gt;</code></li>\n</ul>\n</li>\n<li>查看當前使用的 Node.js 版本\n<ul>\n<li><code>nvm current</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"node全局的變量\"><a class=\"markdownIt-Anchor\" href=\"#node全局的變量\">#</a> Node 全局的變量</h2>\n<h3 id=\"概念-2\"><a class=\"markdownIt-Anchor\" href=\"#概念-2\">#</a> 概念</h3>\n<ul>\n<li>全局环境可直接调用的变量</li>\n</ul>\n<h3 id=\"常用全局变量\"><a class=\"markdownIt-Anchor\" href=\"#常用全局变量\">#</a> 常用全局变量</h3>\n<ul>\n<li>console\n<ul>\n<li>log\n<ul>\n<li>日志</li>\n</ul>\n</li>\n<li>warn\n<ul>\n<li>警告</li>\n</ul>\n</li>\n<li>time + timeEnd\n<ul>\n<li>定义相同的标签，计算标签中间的代码的执行时间</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>_dirname\n<ul>\n<li>当前文件所在目录的绝对路径</li>\n</ul>\n</li>\n<li>_filename\n<ul>\n<li>当前文件所在的绝对路径</li>\n</ul>\n</li>\n<li>setInterval(callback, dealay[,…args])\n<ul>\n<li>定时器</li>\n<li>clearInterval (intervalObject) 清除定时器</li>\n</ul>\n</li>\n<li>setTimeout(callback, delay[,…args])\n<ul>\n<li>计时器</li>\n<li>clearTimeout (timeoutObject) 清除计时器</li>\n</ul>\n</li>\n<li>export</li>\n<li>module</li>\n<li>require()</li>\n</ul>\n<h2 id=\"模块和包的概念\"><a class=\"markdownIt-Anchor\" href=\"#模块和包的概念\">#</a> 模块和包的概念</h2>\n<h3 id=\"模块的概念\"><a class=\"markdownIt-Anchor\" href=\"#模块的概念\">#</a> 模块的概念</h3>\n<ul>\n<li>\n<p>将一组相关的 API 封装在同一个文件内部，供外界引入使用，这个文件被称为 “模块”</p>\n</li>\n<li>\n<p>不同的模块有不同的名称</p>\n<ul>\n<li>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Level1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token function-variable function\">jia</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n1<span class=\"token punctuation\">,</span> n2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n1<span class=\"token operator\">+</span>n2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token function-variable function\">jian</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n1<span class=\"token punctuation\">,</span> n2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n1<span class=\"token operator\">-</span>n2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Level2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token function-variable function\">cheng</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n1<span class=\"token punctuation\">,</span> n2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n1<span class=\"token operator\">*</span>n2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token function-variable function\">chu</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n1<span class=\"token punctuation\">,</span> n2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n1<span class=\"token operator\">/</span>n2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Level1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Level2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>code￼<span class=\"token number\">1</span><span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr></table></figure></div></li>\n<li>\n<div class=\"highlight-container\" data-rel=\"Js\"><figure class=\"iseeu highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>Level1<span class=\"token punctuation\">,</span> Level2<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./01-math'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>gDate<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./02-date'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Level1<span class=\"token punctuation\">.</span><span class=\"token function\">jia</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Level2<span class=\"token punctuation\">.</span><span class=\"token function\">cheng</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gDate<span class=\"token punctuation\">.</span><span class=\"token function\">gDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"包的概念\"><a class=\"markdownIt-Anchor\" href=\"#包的概念\">#</a> 包的概念</h3>\n<ul>\n<li>\n<p>有些功能的实现，并不能单独的由一个模块实现，需要多个相关模块的配合</p>\n</li>\n<li>\n<p>把这些相关的模块，放在同一个文件夹内部，再辅助以描述文件，形成了包的概念</p>\n</li>\n<li>\n<p>描述文件：  <code>package.json</code></p>\n<ul>\n<li>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>项目名称</td>\n<td>“itlike”</td>\n</tr>\n<tr>\n<td>version</td>\n<td>版本号（大版本，中版本，小版本）</td>\n<td>“1.1.0”</td>\n</tr>\n<tr>\n<td>description</td>\n<td>项目功能描述</td>\n<td>“纯属测试，没啥意义”</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>项目关键词，发布后供用户检索用</td>\n<td>[“撩课”, “SZ”, “Node”]</td>\n</tr>\n<tr>\n<td>homepage</td>\n<td>项目主页地址</td>\n<td>“<a class=\"link\"   href=\"http://wenhe9.cn\" >http://wenhe9.cn <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>”</td>\n</tr>\n<tr name=\"\" :=\"\" 撩课-Sz,=\"\" email=\"\" :=\"\" itlke-sz@vx.com=\"\">\n<td>author</td>\n<td>项目作者</td>\n<td></td>\n</tr>\n<tr>\n<td>main</td>\n<td>项目主文件</td>\n<td>“index.js”</td>\n</tr>\n<tr like_start=\"\" :=\"\" nodeindex.js=\"\">\n<td>scripts</td>\n<td>可用脚本 (npm run 名称)</td>\n<td></td>\n</tr>\n<tr axios=\"\" :=\"\" 0.21.1=\"\">\n<td>dependencies</td>\n<td>生产环境依赖的包</td>\n<td></td>\n</tr>\n<tr>\n<td>devDependencies</td>\n<td>开发环境依赖的包</td>\n<td><ruby>“webpack” : &quot;<rp>【</rp><rt>4.29.6&quot;</rt><rp>】</rp></ruby></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"node就遵循了这种模块化的设计\"><a class=\"markdownIt-Anchor\" href=\"#node就遵循了这种模块化的设计\">#</a> node 就遵循了这种模块化的设计</h3>\n<ul>\n<li>将不同的功能，放在了不同的包 / 模块中</li>\n<li>在需要用到的地方，直接引入使用即可</li>\n</ul>\n<h2 id=\"模块的分类\"><a class=\"markdownIt-Anchor\" href=\"#模块的分类\">#</a> 模块的分类</h2>\n<h3 id=\"核心模块\"><a class=\"markdownIt-Anchor\" href=\"#核心模块\">#</a> 核心模块</h3>\n<h4 id=\"概念-3\"><a class=\"markdownIt-Anchor\" href=\"#概念-3\">#</a> 概念</h4>\n<ul>\n<li>因为有些功能是 Node 自带的，提供给我们使用</li>\n<li>那把这一部分称作是 Node 的核心模块\n<ul>\n<li>fs</li>\n<li>path</li>\n<li>http</li>\n<li>os</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"特性\"><a class=\"markdownIt-Anchor\" href=\"#特性\">#</a> 特性</h4>\n<ul>\n<li>已经被编译成二进制，无法查看源码</li>\n</ul>\n<h3 id=\"三方模块\"><a class=\"markdownIt-Anchor\" href=\"#三方模块\">#</a> 三方模块</h3>\n<ul>\n<li>一般都是通过 npm/yarn 安装</li>\n</ul>\n<h3 id=\"自定义模块\"><a class=\"markdownIt-Anchor\" href=\"#自定义模块\">#</a> 自定义模块</h3>\n<h2 id=\"模块化实施规范\"><a class=\"markdownIt-Anchor\" href=\"#模块化实施规范\">#</a> 模块化实施规范</h2>\n<h3 id=\"解决的问题\"><a class=\"markdownIt-Anchor\" href=\"#解决的问题\">#</a> 解决的问题</h3>\n<ul>\n<li>一个模块内的东西，如何导出去让别的模块使用</li>\n<li>另一个模块，如何引入这个模块来使用</li>\n</ul>\n<h3 id=\"规范方案\"><a class=\"markdownIt-Anchor\" href=\"#规范方案\">#</a> 规范方案</h3>\n<h4 id=\"es6之前\"><a class=\"markdownIt-Anchor\" href=\"#es6之前\">#</a> ES6 之前</h4>\n<ul>\n<li>并没有官方标准的模块化实施方案</li>\n<li>在社区中产生了几个主流规范\n<ul>\n<li>AMD\n<ul>\n<li>代表框架 ---- RequireJS</li>\n</ul>\n</li>\n<li>CMD\n<ul>\n<li>代表框架 ---- SeaJS</li>\n</ul>\n</li>\n<li>CommonJS\n<ul>\n<li><code>module.exports</code>  导出</li>\n<li><code>require()</code>  导入</li>\n<li>注意\n<ul>\n<li>前端浏览器不支持，在后端 Node 使用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"es6之后\"><a class=\"markdownIt-Anchor\" href=\"#es6之后\">#</a> ES6 之后</h4>\n<ul>\n<li>之前的主流规范都没有采用</li>\n<li>定义了新的规范\n<ul>\n<li>import</li>\n<li>export</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"commonjs模块使用规范\"><a class=\"markdownIt-Anchor\" href=\"#commonjs模块使用规范\">#</a> CommonJS 模块使用规范</h4>\n<ul>\n<li>模块作用域\n<ul>\n<li>概念\n<ul>\n<li>文件作用域\n<ul>\n<li>Node 中，没法定义自己的全局作用域，只有模块作用域</li>\n</ul>\n</li>\n<li>所以不需要担心一个文件中的变量，会被其他文件修改影响</li>\n<li>外部访问不到内部，内部也访问不到外部</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>模块内向外导出\n<ul>\n<li>exports 使用\n<ul>\n<li>分开导出\n<ul>\n<li><code>exports.key = value</code></li>\n</ul>\n</li>\n<li>统一导出\n<ul>\n<li><code>module.exports = 需要导出去的数据</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>使用方导入模块</li>\n</ul>\n<h2 id=\"核心模块如何使用\"><a class=\"markdownIt-Anchor\" href=\"#核心模块如何使用\">#</a> 核心模块如何使用</h2>\n<ul>\n<li>核心模块为 node 安装时自带的，直接通过 <code>require</code>  引入使用即可</li>\n</ul>\n<h3 id=\"常用模块操作\"><a class=\"markdownIt-Anchor\" href=\"#常用模块操作\">#</a> 常用模块操作</h3>\n<h4 id=\"路径处理模块-path\"><a class=\"markdownIt-Anchor\" href=\"#路径处理模块-path\">#</a> 路径处理模块 ： path</h4>\n<ul>\n<li>作用\n<ul>\n<li>处理各种路径问题</li>\n</ul>\n</li>\n<li>常用 API\n<ul>\n<li>路径的拼接\n<ul>\n<li><code>path.join([path1][,path2]...)</code></li>\n</ul>\n</li>\n<li>路径处理为绝对路径\n<ul>\n<li><code>path.resolve([from...,], to)</code></li>\n</ul>\n</li>\n<li>获取一个路径的拓展名\n<ul>\n<li><code>path.extname(p)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件操作模块-fs\"><a class=\"markdownIt-Anchor\" href=\"#文件操作模块-fs\">#</a> 文件操作模块 fs</h4>\n<ul>\n<li>作用\n<ul>\n<li>可以使用此模块提供的 API 来读写文件</li>\n<li>在 fs 模块中，所有的方法都分为同步和异步两种实现\n<ul>\n<li>有 sync 后缀的方法为同步方法</li>\n<li>不具有 sync 后缀的方法为异步方法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Node.js"
            ]
        }
    ]
}
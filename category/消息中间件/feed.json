{
    "version": "https://jsonfeed.org/version/1",
    "title": "玖忆 • All posts by \"消息中间件\" category",
    "description": "我本微末凡尘、可也心向天空",
    "home_page_url": "https://wait-you.github.io",
    "items": [
        {
            "id": "https://wait-you.github.io/2023/06/02/RabbitMQ/",
            "url": "https://wait-you.github.io/2023/06/02/RabbitMQ/",
            "title": "RabbitMQ",
            "date_published": "2023-06-01T20:37:34.000Z",
            "content_html": "<h1 id=\"1-消息中间件概述\"><a class=\"markdownIt-Anchor\" href=\"#1-消息中间件概述\">#</a> 1. 消息中间件概述</h1>\n<h2 id=\"11-什么是消息中间件\"><a class=\"markdownIt-Anchor\" href=\"#11-什么是消息中间件\">#</a> 1.1. 什么是消息中间件</h2>\n<p>MQ 全称为 Message Queue，消息队列是应用程序和应用程序之间的通信方法。</p>\n<ul>\n<li>\n<p>为什么使用 MQ</p>\n<p>在项目中，可将一些无需即时返回且耗时的操作提取出来，进行<strong>异步处理</strong>，而这种异步处理的方式大大的节省了服务器的请求响应时间，从而<strong>提高</strong>了<strong>系统</strong>的<strong>吞吐量</strong>。</p>\n</li>\n<li>\n<p>开发中消息队列通常有如下应用场景：</p>\n<p>1、任务<strong>异步</strong>处理</p>\n<p>将不需要同步处理的并且耗时长的操作由消息队列通知消息接收方进行异步处理。提高了应用程序的响应时间。</p>\n<p>2、应用程序<strong>解耦合</strong></p>\n<p>MQ 相当于一个中介，生产方通过 MQ 与消费方交互，它将应用程序进行解耦合。</p>\n<p>3、<strong>削峰填谷</strong></p>\n<p>如订单系统，在下单的时候就会往数据库写数据。但是数据库只能支撑每秒 1000 左右的并发写入，并发量再高就容易宕机。低峰期的时候并发也就 100 多个，但是在高峰期时候，并发量会突然激增到 5000 以上，这个时候数据库肯定卡死了。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/01.jpg\"\n                      alt=\"\"\n                ></p>\n<p>消息被 MQ 保存起来了，然后系统就可以按照自己的消费能力来消费，比如每秒 1000 个数据，这样慢慢写入数据库，这样就不会卡死数据库了。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/02.jpg\"\n                      alt=\"\"\n                ></p>\n<p>但是使用了 MQ 之后，限制消费消息的速度为 1000，但是这样一来，高峰期产生的数据势必会被积压在 MQ 中，高峰就被 “削” 掉了。但是因为消息积压，在高峰期过后的一段时间内，消费消息的速度还是会维持在 1000QPS，直到消费完积压的消息，这就叫做 “填谷”</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/03.jpg\"\n                      alt=\"\"\n                ></p>\n</li>\n</ul>\n<h2 id=\"12-amqp-和-jms\"><a class=\"markdownIt-Anchor\" href=\"#12-amqp-和-jms\">#</a> 1.2. AMQP 和 JMS</h2>\n<p>MQ 是消息通信的模型；实现 MQ 的大致有两种主流方式：AMQP、JMS。</p>\n<h3 id=\"121-amqp\"><a class=\"markdownIt-Anchor\" href=\"#121-amqp\">#</a> 1.2.1. AMQP</h3>\n<p>AMQP 是一种协议，更准确的说是一种 binary wire-level protocol（链接协议）。这是其和 JMS 的本质差别，AMQP 不从 API 层进行限定，而是直接定义网络交换的数据格式。</p>\n<h3 id=\"122-jms\"><a class=\"markdownIt-Anchor\" href=\"#122-jms\">#</a> 1.2.2. JMS</h3>\n<p>JMS 即 Java 消息服务（JavaMessage Service）应用程序接口，是一个 Java 平台中关于面向消息中间件（MOM）的 API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。</p>\n<h3 id=\"123-amqp-与-jms-区别\"><a class=\"markdownIt-Anchor\" href=\"#123-amqp-与-jms-区别\">#</a> 1.2.3. AMQP 与 JMS 区别</h3>\n<ul>\n<li>JMS 是定义了统一的接口，来对消息操作进行统一；AMQP 是通过规定协议来统一数据交互的格式</li>\n<li>JMS 限定了必须使用 Java 语言；AMQP 只是协议，不规定实现方式，因此是跨语言的。</li>\n<li>JMS 规定了两种消息模式；而 AMQP 的消息模式更加丰富</li>\n</ul>\n<h2 id=\"13-消息队列产品\"><a class=\"markdownIt-Anchor\" href=\"#13-消息队列产品\">#</a> 1.3. 消息队列产品</h2>\n<p>市场上常见的消息队列有如下：</p>\n<ul>\n<li>ActiveMQ：基于 JMS</li>\n<li>ZeroMQ：基于 C 语言开发</li>\n<li>RabbitMQ：基于 AMQP 协议，erlang 语言开发，稳定性好</li>\n<li>RocketMQ：基于 JMS，阿里巴巴产品</li>\n<li>Kafka：类似 MQ 的产品；分布式消息系统，高吞吐量</li>\n</ul>\n<h2 id=\"14-rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#14-rabbitmq\">#</a> 1.4. RabbitMQ</h2>\n<p>RabbitMQ 是由 erlang 语言开发，基于 AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列，它是一种应用程序之间的通信方法，消息队列在分布式系统开发中应用非常广泛。</p>\n<p>RabbitMQ 官方地址：<a class=\"link\"   href=\"http://www.rabbitmq.com/\" >http://www.rabbitmq.com/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>RabbitMQ 提供了 6 种模式：简单模式，work 模式，Publish/Subscribe 发布与订阅模式，Routing 路由模式，Topics 主题模式，RPC 远程调用模式（远程调用，不太算 MQ；暂不作介绍）；</p>\n<p>官网对应模式介绍：<a class=\"link\"   href=\"https://www.rabbitmq.com/getstarted.html\" >https://www.rabbitmq.com/getstarted.html <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1555988678324.png\"\n                      alt=\"1555988678324\"\n                ></p>\n<h1 id=\"2-安装及配置rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#2-安装及配置rabbitmq\">#</a> 2. 安装及配置 RabbitMQ</h1>\n<p>详细查看  <code>资料/软件/安装RabbitMQ.md</code>  文档。</p>\n<h1 id=\"3-rabbitmq入门\"><a class=\"markdownIt-Anchor\" href=\"#3-rabbitmq入门\">#</a> 3. RabbitMQ 入门</h1>\n<h2 id=\"31-搭建示例工程\"><a class=\"markdownIt-Anchor\" href=\"#31-搭建示例工程\">#</a> 3.1. 搭建示例工程</h2>\n<h3 id=\"311-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#311-创建工程\">#</a> 3.1.1. 创建工程</h3>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558319510387.png\"\n                      alt=\"1555991321159\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558319546688.png\"\n                      alt=\"1555991353704\"\n                ></p>\n<h3 id=\"312-添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#312-添加依赖\">#</a> 3.1.2. 添加依赖</h3>\n<p>往 heima-rabbitmq 的 pom.xml 文件中添加如下依赖：</p>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.rabbitmq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>amqp-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.6.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"32-编写生产者\"><a class=\"markdownIt-Anchor\" href=\"#32-编写生产者\">#</a> 3.2. 编写生产者</h2>\n<p>编写消息生产者 com.itheima.rabbitmq.simple.Producer</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.simple;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Producer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">QUEUE_NAME</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;simple_queue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建连接工厂</span></span><br><span class=\"line\">        <span class=\"type\">ConnectionFactory</span> <span class=\"variable\">connectionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ConnectionFactory</span>();</span><br><span class=\"line\">        <span class=\"comment\">//主机地址;默认为 localhost</span></span><br><span class=\"line\">        connectionFactory.setHost(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接端口;默认为 5672</span></span><br><span class=\"line\">        connectionFactory.setPort(<span class=\"number\">5672</span>);</span><br><span class=\"line\">        <span class=\"comment\">//虚拟主机名称;默认为 /</span></span><br><span class=\"line\">        connectionFactory.setVirtualHost(<span class=\"string\">&quot;/itcast&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接用户名；默认为guest</span></span><br><span class=\"line\">        connectionFactory.setUsername(<span class=\"string\">&quot;heima&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接密码；默认为guest</span></span><br><span class=\"line\">        connectionFactory.setPassword(<span class=\"string\">&quot;heima&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> connectionFactory.newConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(QUEUE_NAME, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 要发送的信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;你好；小兔子！&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称，如果没有指定则使用默认Default Exchage</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：路由key,简单模式可以传递队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息其它属性</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicPublish(<span class=\"string\">&quot;&quot;</span>, QUEUE_NAME, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<p>在执行上述的消息发送之后；可以登录 rabbitMQ 的管理控制台，可以发现队列和其消息：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556006638979.png\"\n                      alt=\"1556006638979\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556006647177.png\"\n                      alt=\"1556006647177\"\n                ></p>\n<h2 id=\"33-编写消费者\"><a class=\"markdownIt-Anchor\" href=\"#33-编写消费者\">#</a> 3.3. 编写消费者</h2>\n<p>抽取创建 connection 的工具类 com.itheima.rabbitmq.util.ConnectionUtil；</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.util;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConnectionUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建连接工厂</span></span><br><span class=\"line\">        <span class=\"type\">ConnectionFactory</span> <span class=\"variable\">connectionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ConnectionFactory</span>();</span><br><span class=\"line\">        <span class=\"comment\">//主机地址;默认为 localhost</span></span><br><span class=\"line\">        connectionFactory.setHost(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接端口;默认为 5672</span></span><br><span class=\"line\">        connectionFactory.setPort(<span class=\"number\">5672</span>);</span><br><span class=\"line\">        <span class=\"comment\">//虚拟主机名称;默认为 /</span></span><br><span class=\"line\">        connectionFactory.setVirtualHost(<span class=\"string\">&quot;/itcast&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接用户名；默认为guest</span></span><br><span class=\"line\">        connectionFactory.setUsername(<span class=\"string\">&quot;heima&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//连接密码；默认为guest</span></span><br><span class=\"line\">        connectionFactory.setPassword(<span class=\"string\">&quot;heima&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> connectionFactory.newConnection();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<p>编写消息的消费者 com.itheima.rabbitmq.simple.Consumer</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.simple;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.QUEUE_NAME, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.QUEUE_NAME, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//不关闭资源，应该一直监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">//channel.close();</span></span><br><span class=\"line\">        <span class=\"comment\">//connection.close();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"34-小结\"><a class=\"markdownIt-Anchor\" href=\"#34-小结\">#</a> 3.4. 小结</h2>\n<p>上述的入门案例中中其实使用的是如下的简单模式：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1555991074575.png\"\n                      alt=\"1555991074575\"\n                ></p>\n<p>在上图的模型中，有以下概念：</p>\n<ul>\n<li>P：生产者，也就是要发送消息的程序</li>\n<li>C：消费者：消息的接受者，会一直等待消息到来。</li>\n<li>queue：消息队列，图中红色部分。类似一个邮箱，可以缓存消息；生产者向其中投递消息，消费者从其中取出消息。</li>\n</ul>\n<h1 id=\"4-amqp\"><a class=\"markdownIt-Anchor\" href=\"#4-amqp\">#</a> 4. AMQP</h1>\n<h2 id=\"41-相关概念介绍\"><a class=\"markdownIt-Anchor\" href=\"#41-相关概念介绍\">#</a> 4.1. 相关概念介绍</h2>\n<p>AMQP  一个提供统一消息服务的应用层标准高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计。</p>\n<p>AMQP 是一个二进制协议，拥有一些现代化特点：多信道、协商式，异步，安全，扩平台，中立，高效。</p>\n<p>RabbitMQ 是 AMQP 协议的 Erlang 的实现。</p>\n<table>\n<thead>\n<tr>\n<th>概念</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>连接 Connection</td>\n<td>一个网络连接，比如 TCP/IP 套接字连接。</td>\n</tr>\n<tr>\n<td>会话 Session</td>\n<td>端点之间的命名对话。在一个会话上下文中，保证 “恰好传递一次”。</td>\n</tr>\n<tr>\n<td>信道 Channel</td>\n<td>多路复用连接中的一条独立的双向数据流通道。为会话提供物理传输介质。</td>\n</tr>\n<tr>\n<td>客户端 Client</td>\n<td>AMQP 连接或者会话的发起者。AMQP 是非对称的，客户端生产和消费消息，服务器存储和路由这些消息。</td>\n</tr>\n<tr>\n<td>服务节点 Broker</td>\n<td>消息中间件的服务节点；一般情况下可以将一个 RabbitMQ Broker 看作一台 RabbitMQ 服务器。</td>\n</tr>\n<tr>\n<td>端点</td>\n<td>AMQP 对话的任意一方。一个 AMQP 连接包括两个端点（一个是客户端，一个是服务器）。</td>\n</tr>\n<tr>\n<td>消费者 Consumer</td>\n<td>一个从消息队列里请求消息的客户端程序。</td>\n</tr>\n<tr>\n<td>生产者 Producer</td>\n<td>一个向交换机发布消息的客户端应用程序。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"42-rabbitmq运转流程\"><a class=\"markdownIt-Anchor\" href=\"#42-rabbitmq运转流程\">#</a> 4.2. RabbitMQ 运转流程</h2>\n<p>在入门案例中：</p>\n<ul>\n<li>生产者发送消息\n<ol>\n<li>生产者创建连接（Connection），开启一个信道（Channel），连接到 RabbitMQ Broker；</li>\n<li>声明队列并设置属性；如是否排它，是否持久化，是否自动删除；</li>\n<li>将路由键（空字符串）与队列绑定起来；</li>\n<li>发送消息至 RabbitMQ Broker；</li>\n<li>关闭信道；</li>\n<li>关闭连接；</li>\n</ol>\n</li>\n<li>消费者接收消息\n<ol>\n<li>消费者创建连接（Connection），开启一个信道（Channel），连接到 RabbitMQ Broker</li>\n<li>向 Broker 请求消费相应队列中的消息，设置相应的回调函数；</li>\n<li>等待 Broker 回应闭关投递响应队列中的消息，消费者接收消息；</li>\n<li>确认（ack，自动确认）接收到的消息；</li>\n<li>RabbitMQ 从队列中删除相应已经被确认的消息；</li>\n<li>关闭信道；</li>\n<li>关闭连接；</li>\n</ol>\n</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1565105223969.png\"\n                      alt=\"1565105223969\"\n                ></p>\n<h2 id=\"43-生产者流转过程说明\"><a class=\"markdownIt-Anchor\" href=\"#43-生产者流转过程说明\">#</a> 4.3. 生产者流转过程说明</h2>\n<ol>\n<li>客户端与代理服务器 Broker 建立连接。会调用 newConnection () 方法，这个方法会进一步封装 Protocol Header 0-9-1 的报文头发送给 Broker ，以此通知 Broker 本次交互采用的是 AMQPO-9-1 协议，紧接着 Broker 返回 Connection.Start 来建立连接，在连接的过程中涉及 Connection.Start/.Start-OK 、Connection.Tune/.Tune-Ok ，Connection.Open/.Open-Ok 这 6 个命令的交互。</li>\n<li>客户端调用 connection.createChannel 方法。此方法开启信道，其包装的 channel.open 命令发送给 Broker, 等待 channel.basicPublish 方法，对应的 AMQP 命令为 Basic.Publish, 这个命令包含了 content Header 和 content Body ()。content Header 包含了消息体的属性，例如：投递模式，优先级等，content Body 包含了消息体本身。</li>\n<li>客户端发送完消息需要关闭资源时，涉及到 Channel.Close 和 Channl.Close-Ok 与 Connetion.Close 和 Connection.Close-Ok 的命令交互。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/%E7%94%9F%E4%BA%A7%E8%80%85%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B%E5%9B%BE.bmp\"\n                      alt=\"生产者流转过程图\"\n                ></p>\n<h2 id=\"44-消费者流转过程说明\"><a class=\"markdownIt-Anchor\" href=\"#44-消费者流转过程说明\">#</a> 4.4. 消费者流转过程说明</h2>\n<ol>\n<li>消费者客户端与代理服务器 Broker 建立连接。会调用 newConnection () 方法，这个方法会进一步封装 Protocol Header 0-9-1 的报文头发送给 Broker ，以此通知 Broker 本次交互采用的是 AMQPO-9-1 协议，紧接着 Broker 返回 Connection.Start 来建立连接，在连接的过程中涉及 Connection.Start/.Start-OK 、Connection.Tune/.Tune-Ok ，Connection.Open/.Open-Ok 这 6 个命令的交互。</li>\n<li>消费者客户端调用 connection.createChannel 方法。和生产者客户端一样，协议涉及 Channel . Open/Open-Ok 命令。</li>\n<li>在真正消费之前，消费者客户端需要向 Broker 发送 Basic.Consume 命令 (即调用 channel.basicConsume 方法〉将 Channel 置为接收模式，之后 Broker 回执 Basic . Consume - Ok 以告诉消费者客户端准备好消费消息。</li>\n<li>Broker 向消费者客户端推送 (Push) 消息，即 Basic.Deliver 命令，这个命令和 Basic.Publish 命令一样会携带 Content Header 和 Content Body。</li>\n<li>消费者接收到消息并正确消费之后，向 Broker 发送确认，即 Basic.Ack 命令。</li>\n<li>客户端发送完消息需要关闭资源时，涉及到 Channel.Close 和 Channl.Close-Ok 与 Connetion.Close 和 Connection.Close-Ok 的命令交互。</li>\n</ol>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/%E6%B6%88%E8%B4%B9%E8%80%85%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B%E5%9B%BE.bmp\"\n                      alt=\"消费者流转过程图\"\n                ></p>\n<h1 id=\"5-rabbitmq工作模式\"><a class=\"markdownIt-Anchor\" href=\"#5-rabbitmq工作模式\">#</a> 5. RabbitMQ 工作模式</h1>\n<h2 id=\"41-work-queues工作队列模式\"><a class=\"markdownIt-Anchor\" href=\"#41-work-queues工作队列模式\">#</a> 4.1. Work queues 工作队列模式</h2>\n<h3 id=\"411-模式说明\"><a class=\"markdownIt-Anchor\" href=\"#411-模式说明\">#</a> 4.1.1. 模式说明</h3>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556009144848.png\"\n                      alt=\"1556009144848\"\n                ></p>\n<p><code>Work Queues</code>  与入门程序的 <code>简单模式</code> 相比，多了一个或一些消费端，多个消费端共同消费同一个队列中的消息。</p>\n<p><strong>应用场景</strong>：对于 任务过重或任务较多情况使用工作队列可以提高任务处理的速度。</p>\n<h3 id=\"412-代码\"><a class=\"markdownIt-Anchor\" href=\"#412-代码\">#</a> 4.1.2. 代码</h3>\n<p><code>Work Queues</code>  与入门程序的 <code>简单模式</code> 的代码是几乎一样的；可以完全复制，并复制多一个消费者进行多个消费者同时消费消息的测试。</p>\n<h4 id=\"1生产者\"><a class=\"markdownIt-Anchor\" href=\"#1生产者\">#</a> 1）生产者</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.work;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.ConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Producer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">QUEUE_NAME</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;work_queue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(QUEUE_NAME, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">30</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;你好；小兔子！work模式--&quot;</span> + i;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数1：交换机名称，如果没有指定则使用默认Default Exchage</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数2：路由key,简单模式可以传递队列名称</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数3：消息其它属性</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数4：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            channel.basicPublish(<span class=\"string\">&quot;&quot;</span>, QUEUE_NAME, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2消费者1\"><a class=\"markdownIt-Anchor\" href=\"#2消费者1\">#</a> 2）消费者 1</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.work;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.QUEUE_NAME, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//一次只能接收并处理一个消息</span></span><br><span class=\"line\">        channel.basicQos(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                    <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                    <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                    <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消费者1-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//确认消息</span></span><br><span class=\"line\">                    channel.basicAck(envelope.getDeliveryTag(), <span class=\"literal\">false</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.QUEUE_NAME, <span class=\"literal\">false</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"3消费者2\"><a class=\"markdownIt-Anchor\" href=\"#3消费者2\">#</a> 3）消费者 2</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.work;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.QUEUE_NAME, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//一次只能接收并处理一个消息</span></span><br><span class=\"line\">        channel.basicQos(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                    <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                    <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                    <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;消费者2-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//确认消息</span></span><br><span class=\"line\">                    channel.basicAck(envelope.getDeliveryTag(), <span class=\"literal\">false</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.QUEUE_NAME, <span class=\"literal\">false</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"413-测试\"><a class=\"markdownIt-Anchor\" href=\"#413-测试\">#</a> 4.1.3. 测试</h3>\n<p>启动两个消费者，然后再启动生产者发送消息；到 IDEA 的两个消费者对应的控制台查看是否竞争性的接收到消息。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556014310859.png\"\n                      alt=\"1556014310859\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556014318106.png\"\n                      alt=\"1556014318106\"\n                ></p>\n<h3 id=\"414-小结\"><a class=\"markdownIt-Anchor\" href=\"#414-小结\">#</a> 4.1.4. 小结</h3>\n<p>在一个队列中如果有多个消费者，那么消费者之间对于同一个消息的关系是<strong>竞争</strong>的关系。</p>\n<h2 id=\"42-订阅模式类型\"><a class=\"markdownIt-Anchor\" href=\"#42-订阅模式类型\">#</a> 4.2. 订阅模式类型</h2>\n<p>订阅模式示例图：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556014499573.png\"\n                      alt=\"1556014499573\"\n                ></p>\n<p>前面 2 个案例中，只有 3 个角色：</p>\n<ul>\n<li>P：生产者，也就是要发送消息的程序</li>\n<li>C：消费者：消息的接受者，会一直等待消息到来。</li>\n<li>queue：消息队列，图中红色部分</li>\n</ul>\n<p>而在订阅模型中，多了一个 exchange 角色，而且过程略有变化：</p>\n<ul>\n<li>P：生产者，也就是要发送消息的程序，但是不再发送到队列中，而是发给 X（交换机）</li>\n<li>C：消费者，消息的接受者，会一直等待消息到来。</li>\n<li>Queue：消息队列，接收消息、缓存消息。</li>\n<li>Exchange：交换机，图中的 X。一方面，接收生产者发送的消息。另一方面，知道如何处理消息，例如递交给某个特别队列、递交给所有队列、或是将消息丢弃。到底如何操作，取决于 Exchange 的类型。Exchange 有常见以下 3 种类型：\n<ul>\n<li>Fanout：广播，将消息交给所有绑定到交换机的队列</li>\n<li>Direct：定向，把消息交给符合指定 routing key 的队列</li>\n<li>Topic：通配符，把消息交给符合 routing pattern（路由模式） 的队列</li>\n</ul>\n</li>\n</ul>\n<p><strong>Exchange（交换机）只负责转发消息，不具备存储消息的能力</strong>，因此如果没有任何队列与 Exchange 绑定，或者没有符合路由规则的队列，那么消息会丢失！</p>\n<h2 id=\"43-publishsubscribe发布与订阅模式\"><a class=\"markdownIt-Anchor\" href=\"#43-publishsubscribe发布与订阅模式\">#</a> 4.3. Publish/Subscribe 发布与订阅模式</h2>\n<h3 id=\"431-模式说明\"><a class=\"markdownIt-Anchor\" href=\"#431-模式说明\">#</a> 4.3.1. 模式说明</h3>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556010329032.png\"\n                      alt=\"1556010329032\"\n                ></p>\n<p>发布订阅模式：<br>\n1、每个消费者监听自己的队列。<br>\n2、生产者将消息发给 broker，由交换机将消息转发到绑定此交换机的每个队列，每个绑定交换机的队列都将接收<br>\n到消息</p>\n<h3 id=\"432-代码\"><a class=\"markdownIt-Anchor\" href=\"#432-代码\">#</a> 4.3.2. 代码</h3>\n<h4 id=\"1生产者-2\"><a class=\"markdownIt-Anchor\" href=\"#1生产者-2\">#</a> 1）生产者</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.ps;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 发布与订阅使用的交换机类型为：fanout</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Producer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//交换机名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">FANOUT_EXCHAGE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;fanout_exchange&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">FANOUT_QUEUE_1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;fanout_queue_1&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">FANOUT_QUEUE_2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;fanout_queue_2&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 声明交换机</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：交换机类型，fanout、topic、direct、headers</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.exchangeDeclare(FANOUT_EXCHAGE, BuiltinExchangeType.FANOUT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(FANOUT_QUEUE_1, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        channel.queueDeclare(FANOUT_QUEUE_2, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(FANOUT_QUEUE_1, FANOUT_EXCHAGE, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        channel.queueBind(FANOUT_QUEUE_2, FANOUT_EXCHAGE, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;你好；小兔子！发布订阅模式--&quot;</span> + i;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数1：交换机名称，如果没有指定则使用默认Default Exchage</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数2：路由key,简单模式可以传递队列名称</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数3：消息其它属性</span></span><br><span class=\"line\"><span class=\"comment\">             * 参数4：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            channel.basicPublish(FANOUT_EXCHAGE, <span class=\"string\">&quot;&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2消费者1-2\"><a class=\"markdownIt-Anchor\" href=\"#2消费者1-2\">#</a> 2）消费者 1</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.ps;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.FANOUT_EXCHAGE, BuiltinExchangeType.FANOUT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.FANOUT_QUEUE_1, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.FANOUT_QUEUE_1, Producer.FANOUT_EXCHAGE, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者1-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.FANOUT_QUEUE_1, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"3消费者2-2\"><a class=\"markdownIt-Anchor\" href=\"#3消费者2-2\">#</a> 3）消费者 2</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.ps;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.FANOUT_EXCHAGE, BuiltinExchangeType.FANOUT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.FANOUT_QUEUE_2, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.FANOUT_QUEUE_2, Producer.FANOUT_EXCHAGE, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者2-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.FANOUT_QUEUE_2, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"433-测试\"><a class=\"markdownIt-Anchor\" href=\"#433-测试\">#</a> 4.3.3. 测试</h3>\n<p>启动所有消费者，然后使用生产者发送消息；在每个消费者对应的控制台可以查看到生产者发送的所有消息；到达<strong>广播</strong>的效果。</p>\n<p>在执行完测试代码后，其实到 RabbitMQ 的管理后台找到 <code>Exchanges</code>  选项卡，点击  <code>fanout_exchange</code>  的交换机，可以查看到如下的绑定：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556015006220.png\"\n                      alt=\"1556015006220\"\n                ></p>\n<h3 id=\"434-小结\"><a class=\"markdownIt-Anchor\" href=\"#434-小结\">#</a> 4.3.4. 小结</h3>\n<p>交换机需要与队列进行绑定，绑定之后；一个消息可以被多个消费者都收到。</p>\n<p><strong>发布订阅模式与工作队列模式的区别</strong></p>\n<p>1、工作队列模式不用定义交换机，而发布 / 订阅模式需要定义交换机。</p>\n<p>2、发布 / 订阅模式的生产方是面向交换机发送消息，工作队列模式的生产方是面向队列发送消息 (底层使用默认交换机)。</p>\n<p>3、发布 / 订阅模式需要设置队列和交换机的绑定，工作队列模式不需要设置，实际上工作队列模式会将队列绑 定到默认的交换机 。</p>\n<h2 id=\"44-routing路由模式\"><a class=\"markdownIt-Anchor\" href=\"#44-routing路由模式\">#</a> 4.4. Routing 路由模式</h2>\n<h3 id=\"441-模式说明\"><a class=\"markdownIt-Anchor\" href=\"#441-模式说明\">#</a> 4.4.1. 模式说明</h3>\n<p>路由模式特点：</p>\n<ul>\n<li>队列与交换机的绑定，不能是任意绑定了，而是要指定一个 <code>RoutingKey</code> （路由 key）</li>\n<li>消息的发送方在 向 Exchange 发送消息时，也必须指定消息的  <code>RoutingKey</code> 。</li>\n<li>Exchange 不再把消息交给每一个绑定的队列，而是根据消息的 <code>Routing Key</code>  进行判断，只有队列的 <code>Routingkey</code>  与消息的  <code>Routing key</code>  完全一致，才会接收到消息</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556029284397.png\"\n                      alt=\"1556029284397\"\n                ></p>\n<p>图解：</p>\n<ul>\n<li>P：生产者，向 Exchange 发送消息，发送消息时，会指定一个 routing key。</li>\n<li>X：Exchange（交换机），接收生产者的消息，然后把消息递交给 与 routing key 完全匹配的队列</li>\n<li>C1：消费者，其所在队列指定了需要 routing key 为 error 的消息</li>\n<li>C2：消费者，其所在队列指定了需要 routing key 为 info、error、warning 的消息</li>\n</ul>\n<h3 id=\"442-代码\"><a class=\"markdownIt-Anchor\" href=\"#442-代码\">#</a> 4.4.2. 代码</h3>\n<p>在编码上与  <code>Publish/Subscribe发布与订阅模式</code>  的区别是交换机的类型为：Direct，还有队列绑定交换机的时候需要指定 routing key。</p>\n<h4 id=\"1生产者-3\"><a class=\"markdownIt-Anchor\" href=\"#1生产者-3\">#</a> 1）生产者</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.routing;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 路由模式的交换机类型为：direct</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Producer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//交换机名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">DIRECT_EXCHAGE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;direct_exchange&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">DIRECT_QUEUE_INSERT</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;direct_queue_insert&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">DIRECT_QUEUE_UPDATE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;direct_queue_update&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 声明交换机</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：交换机类型，fanout、topic、direct、headers</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.exchangeDeclare(DIRECT_EXCHAGE, BuiltinExchangeType.DIRECT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(DIRECT_QUEUE_INSERT, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        channel.queueDeclare(DIRECT_QUEUE_UPDATE, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(DIRECT_QUEUE_INSERT, DIRECT_EXCHAGE, <span class=\"string\">&quot;insert&quot;</span>);</span><br><span class=\"line\">        channel.queueBind(DIRECT_QUEUE_UPDATE, DIRECT_EXCHAGE, <span class=\"string\">&quot;update&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;新增了商品。路由模式；routing key 为 insert &quot;</span> ;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称，如果没有指定则使用默认Default Exchage</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：路由key,简单模式可以传递队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息其它属性</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicPublish(DIRECT_EXCHAGE, <span class=\"string\">&quot;insert&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">        message = <span class=\"string\">&quot;修改了商品。路由模式；routing key 为 update&quot;</span> ;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称，如果没有指定则使用默认Default Exchage</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：路由key,简单模式可以传递队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息其它属性</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicPublish(DIRECT_EXCHAGE, <span class=\"string\">&quot;update&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2消费者1-3\"><a class=\"markdownIt-Anchor\" href=\"#2消费者1-3\">#</a> 2）消费者 1</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.routing;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.DIRECT_EXCHAGE, BuiltinExchangeType.DIRECT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.DIRECT_QUEUE_INSERT, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.DIRECT_QUEUE_INSERT, Producer.DIRECT_EXCHAGE, <span class=\"string\">&quot;insert&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者1-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.DIRECT_QUEUE_INSERT, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"3消费者2-3\"><a class=\"markdownIt-Anchor\" href=\"#3消费者2-3\">#</a> 3）消费者 2</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.routing;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.DIRECT_EXCHAGE, BuiltinExchangeType.DIRECT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.DIRECT_QUEUE_UPDATE, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.DIRECT_QUEUE_UPDATE, Producer.DIRECT_EXCHAGE, <span class=\"string\">&quot;update&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者2-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.DIRECT_QUEUE_UPDATE, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"443-测试\"><a class=\"markdownIt-Anchor\" href=\"#443-测试\">#</a> 4.4.3. 测试</h3>\n<p>启动所有消费者，然后使用生产者发送消息；在消费者对应的控制台可以查看到生产者发送对应 routing key 对应队列的消息；到达<strong>按照需要接收</strong>的效果。</p>\n<p>在执行完测试代码后，其实到 RabbitMQ 的管理后台找到 <code>Exchanges</code>  选项卡，点击  <code>direct_exchange</code>  的交换机，可以查看到如下的绑定：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556031175744.png\"\n                      alt=\"1556031175744\"\n                ></p>\n<h3 id=\"444-小结\"><a class=\"markdownIt-Anchor\" href=\"#444-小结\">#</a> 4.4.4. 小结</h3>\n<p>Routing 模式要求队列在绑定交换机时要指定 routing key，消息会转发到符合 routing key 的队列。</p>\n<h2 id=\"45-topics通配符模式\"><a class=\"markdownIt-Anchor\" href=\"#45-topics通配符模式\">#</a> 4.5. Topics 通配符模式</h2>\n<h3 id=\"451-模式说明\"><a class=\"markdownIt-Anchor\" href=\"#451-模式说明\">#</a> 4.5.1. 模式说明</h3>\n<p><code>Topic</code>  类型与 <code>Direct</code>  相比，都是可以根据 <code>RoutingKey</code>  把消息路由到不同的队列。只不过 <code>Topic</code>  类型 <code>Exchange</code>  可以让队列在绑定 <code>Routing key</code>  的时候<strong>使用通配符</strong>！</p>\n<p><code>Routingkey</code>  一般都是有一个或多个单词组成，多个单词之间以”.” 分割，例如：  <code>item.insert</code></p>\n<p>通配符规则：</p>\n<p><code>#</code> ：匹配一个或多个词</p>\n<p><code>*</code> ：匹配不多不少恰好 1 个词</p>\n<p>举例：</p>\n<p><code>item.#</code> ：能够匹配 <code>item.insert.abc</code>  或者  <code>item.insert</code></p>\n<p><code>item.*</code> ：只能匹配 <code>item.insert</code></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556031362048.png\"\n                      alt=\"1556031362048\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556031519931.png\"\n                      alt=\"1556031519931\"\n                ></p>\n<p>图解：</p>\n<ul>\n<li>红色 Queue：绑定的是 <code>usa.#</code>  ，因此凡是以  <code>usa.</code>  开头的 <code>routing key</code>  都会被匹配到</li>\n<li>黄色 Queue：绑定的是 <code>#.news</code>  ，因此凡是以  <code>.news</code>  结尾的  <code>routing key</code>  都会被匹配</li>\n</ul>\n<h3 id=\"452-代码\"><a class=\"markdownIt-Anchor\" href=\"#452-代码\">#</a> 4.5.2. 代码</h3>\n<h4 id=\"1生产者-4\"><a class=\"markdownIt-Anchor\" href=\"#1生产者-4\">#</a> 1）生产者</h4>\n<p>使用 topic 类型的 Exchange，发送消息的 routing key 有 3 种：  <code>item.insert</code> 、 <code>item.update</code> 、 <code>item.delete</code> ：</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.topic;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.BuiltinExchangeType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Connection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通配符Topic的交换机类型为：topic</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Producer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//交换机名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_EXCHAGE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic_exchange&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_QUEUE_1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic_queue_1&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_QUEUE_2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic_queue_2&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建连接</span></span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 声明交换机</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：交换机类型，fanout、topic、topic、headers</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.exchangeDeclare(TOPIC_EXCHAGE, BuiltinExchangeType.TOPIC);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;新增了商品。Topic模式；routing key 为 item.insert &quot;</span> ;</span><br><span class=\"line\">        channel.basicPublish(TOPIC_EXCHAGE, <span class=\"string\">&quot;item.insert&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">        message = <span class=\"string\">&quot;修改了商品。Topic模式；routing key 为 item.update&quot;</span> ;</span><br><span class=\"line\">        channel.basicPublish(TOPIC_EXCHAGE, <span class=\"string\">&quot;item.update&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 发送信息</span></span><br><span class=\"line\">        message = <span class=\"string\">&quot;删除了商品。Topic模式；routing key 为 item.delete&quot;</span> ;</span><br><span class=\"line\">        channel.basicPublish(TOPIC_EXCHAGE, <span class=\"string\">&quot;item.delete&quot;</span>, <span class=\"literal\">null</span>, message.getBytes());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;已发送消息：&quot;</span> + message);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2消费者1-4\"><a class=\"markdownIt-Anchor\" href=\"#2消费者1-4\">#</a> 2）消费者 1</h4>\n<p>接收两种类型的消息：更新商品和删除商品</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.topic;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.TOPIC_EXCHAGE, BuiltinExchangeType.TOPIC);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.TOPIC_QUEUE_1, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.TOPIC_QUEUE_1, Producer.TOPIC_EXCHAGE, <span class=\"string\">&quot;item.update&quot;</span>);</span><br><span class=\"line\">        channel.queueBind(Producer.TOPIC_QUEUE_1, Producer.TOPIC_EXCHAGE, <span class=\"string\">&quot;item.delete&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者1-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.TOPIC_QUEUE_1, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"3消费者2-4\"><a class=\"markdownIt-Anchor\" href=\"#3消费者2-4\">#</a> 3）消费者 2</h4>\n<p>接收所有类型的消息：新增商品，更新商品和删除商品。</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.topic;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.util.ConnectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Consumer2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> ConnectionUtil.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建频道</span></span><br><span class=\"line\">        <span class=\"type\">Channel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">        channel.exchangeDeclare(Producer.TOPIC_EXCHAGE, BuiltinExchangeType.TOPIC);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 声明（创建）队列</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否定义持久化队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：是否独占本次连接</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数4：是否在不使用的时候自动删除队列</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数5：队列其它参数</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.queueDeclare(Producer.TOPIC_QUEUE_2, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//队列绑定交换机</span></span><br><span class=\"line\">        channel.queueBind(Producer.TOPIC_QUEUE_2, Producer.TOPIC_EXCHAGE, <span class=\"string\">&quot;item.*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//创建消费者；并设置消息处理</span></span><br><span class=\"line\">        <span class=\"type\">DefaultConsumer</span> <span class=\"variable\">consumer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultConsumer</span>(channel)&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * consumerTag 消息者标签，在channel.basicConsume时候可以指定</span></span><br><span class=\"line\"><span class=\"comment\">             * envelope 消息包的内容，可从中获取消息id，消息routingkey，交换机，消息和重传标志(收到消息失败后是否需要重新发送)</span></span><br><span class=\"line\"><span class=\"comment\">             * properties 属性信息</span></span><br><span class=\"line\"><span class=\"comment\">             * body 消息</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handleDelivery</span><span class=\"params\">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class=\"type\">byte</span>[] body)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">                <span class=\"comment\">//路由key</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;路由key为：&quot;</span> + envelope.getRoutingKey());</span><br><span class=\"line\">                <span class=\"comment\">//交换机</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;交换机为：&quot;</span> + envelope.getExchange());</span><br><span class=\"line\">                <span class=\"comment\">//消息id</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消息id为：&quot;</span> + envelope.getDeliveryTag());</span><br><span class=\"line\">                <span class=\"comment\">//收到的消息</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;消费者2-接收到的消息为：&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, <span class=\"string\">&quot;utf-8&quot;</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"comment\">//监听消息</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：队列名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：是否自动确认，设置为true为表示消息接收到自动向mq回复接收到了，mq接收到回复会删除消息，设置为false则需要手动确认</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：消息接收到后回调</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        channel.basicConsume(Producer.TOPIC_QUEUE_2, <span class=\"literal\">true</span>, consumer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"453-测试\"><a class=\"markdownIt-Anchor\" href=\"#453-测试\">#</a> 4.5.3. 测试</h3>\n<p>启动所有消费者，然后使用生产者发送消息；在消费者对应的控制台可以查看到生产者发送对应 routing key 对应队列的消息；到达<strong>按照需要接收</strong>的效果；并且这些 routing key 可以使用通配符。</p>\n<p>在执行完测试代码后，其实到 RabbitMQ 的管理后台找到 <code>Exchanges</code>  选项卡，点击  <code>topic_exchange</code>  的交换机，可以查看到如下的绑定：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556032433333.png\"\n                      alt=\"1556032433333\"\n                ></p>\n<h3 id=\"454-小结\"><a class=\"markdownIt-Anchor\" href=\"#454-小结\">#</a> 4.5.4. 小结</h3>\n<p>Topic 主题模式可以实现  <code>Publish/Subscribe发布与订阅模式</code>  和  <code> Routing路由模式</code>  的功能；只是 Topic 在配置 routing key 的时候可以使用通配符，显得更加灵活。</p>\n<h2 id=\"46-模式总结\"><a class=\"markdownIt-Anchor\" href=\"#46-模式总结\">#</a> 4.6. 模式总结</h2>\n<p>RabbitMQ 工作模式：<br>\n<strong>1、简单模式 HelloWorld</strong><br>\n 一个生产者、一个消费者，不需要设置交换机（使用默认的交换机）</p>\n<p><strong>2、工作队列模式 Work Queue</strong><br>\n 一个生产者、多个消费者（竞争关系），不需要设置交换机（使用默认的交换机）</p>\n<p><strong>3、发布订阅模式 Publish/subscribe</strong><br>\n 需要设置类型为 fanout 的交换机，并且交换机和队列进行绑定，当发送消息到交换机后，交换机会将消息发送到绑定的队列</p>\n<p><strong>4、路由模式 Routing</strong><br>\n 需要设置类型为 direct 的交换机，交换机和队列进行绑定，并且指定 routing key，当发送消息到交换机后，交换机会根据 routing key 将消息发送到对应的队列</p>\n<p><strong>5、通配符模式 Topic</strong><br>\n 需要设置类型为 topic 的交换机，交换机和队列进行绑定，并且指定通配符方式的 routing key，当发送消息到交换机后，交换机会根据 routing key 将消息发送到对应的队列</p>\n<h1 id=\"5-spring-整合rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#5-spring-整合rabbitmq\">#</a> 5. Spring 整合 RabbitMQ</h1>\n<h2 id=\"51-搭建生产者工程\"><a class=\"markdownIt-Anchor\" href=\"#51-搭建生产者工程\">#</a> 5.1. 搭建生产者工程</h2>\n<h3 id=\"511-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#511-创建工程\">#</a> 5.1.1. 创建工程</h3>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1565149342994.png\"\n                      alt=\"1565149342994\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1565144326498.png\"\n                      alt=\"1565144326498\"\n                ></p>\n<h3 id=\"512-添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#512-添加依赖\">#</a> 5.1.2. 添加依赖</h3>\n<p>修改 pom.xml 文件内容为如下：</p>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-rabbitmq-producer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.7.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.amqp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-rabbit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.8.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.7.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"513-配置整合\"><a class=\"markdownIt-Anchor\" href=\"#513-配置整合\">#</a> 5.1.3. 配置整合</h3>\n<ol>\n<li>创建 <code>spring-rabbitmq-producer\\src\\main\\resources\\properties\\rabbitmq.properties</code>  连接参数等配置文件；</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Properties\"><figure class=\"iseeu highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">rabbitmq.host</span>=<span class=\"string\">192.168.12.135</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.port</span>=<span class=\"string\">5672</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.username</span>=<span class=\"string\">heima</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.password</span>=<span class=\"string\">heima</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.virtual-host</span>=<span class=\"string\">/itcast</span></span><br></pre></td></tr></table></figure></div>\n<ol start=\"2\">\n<li>创建  <code>spring-rabbitmq-producer\\src\\main\\resources\\spring\\spring-rabbitmq.xml</code>  整合配置文件；</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:rabbit</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/rabbit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/rabbit</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--加载配置文件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath:properties/rabbitmq.properties&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 定义rabbitmq connectionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:connection-factory</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;connectionFactory&quot;</span> <span class=\"attr\">host</span>=<span class=\"string\">&quot;$&#123;rabbitmq.host&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">port</span>=<span class=\"string\">&quot;$&#123;rabbitmq.port&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">username</span>=<span class=\"string\">&quot;$&#123;rabbitmq.username&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">password</span>=<span class=\"string\">&quot;$&#123;rabbitmq.password&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">virtual-host</span>=<span class=\"string\">&quot;$&#123;rabbitmq.virtual-host&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义管理交换机、队列--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:admin</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">&quot;connectionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义持久化队列，不存在则自动创建；不绑定到交换机则绑定到默认交换机</span></span><br><span class=\"line\"><span class=\"comment\">    默认交换机类型为direct，名字为：&quot;&quot;，路由键为队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_queue&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_queue&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~广播；所有队列都能收到消息~~~~~~~~~~~~~~~~~~~~~~~~~~~~ --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播交换机中的持久化队列，不存在则自动创建--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_fanout_queue_1&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_fanout_queue_1&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播交换机中的持久化队列，不存在则自动创建--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_fanout_queue_2&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_fanout_queue_2&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播类型交换机；并绑定上述两个队列--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:fanout-exchange</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_fanout_exchange&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_fanout_exchange&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:bindings</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rabbit:binding</span> <span class=\"attr\">queue</span>=<span class=\"string\">&quot;spring_fanout_queue_1&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rabbit:binding</span> <span class=\"attr\">queue</span>=<span class=\"string\">&quot;spring_fanout_queue_2&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rabbit:bindings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">rabbit:fanout-exchange</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~通配符；*匹配一个单词，#匹配多个单词 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播交换机中的持久化队列，不存在则自动创建--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_topic_queue_star&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_topic_queue_star&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播交换机中的持久化队列，不存在则自动创建--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_topic_queue_well&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_topic_queue_well&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义广播交换机中的持久化队列，不存在则自动创建--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:queue</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_topic_queue_well2&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_topic_queue_well2&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:topic-exchange</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spring_topic_exchange&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;spring_topic_exchange&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:bindings</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rabbit:binding</span> <span class=\"attr\">pattern</span>=<span class=\"string\">&quot;heima.*&quot;</span> <span class=\"attr\">queue</span>=<span class=\"string\">&quot;spring_topic_queue_star&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rabbit:binding</span> <span class=\"attr\">pattern</span>=<span class=\"string\">&quot;heima.#&quot;</span> <span class=\"attr\">queue</span>=<span class=\"string\">&quot;spring_topic_queue_well&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rabbit:binding</span> <span class=\"attr\">pattern</span>=<span class=\"string\">&quot;itcast.#&quot;</span> <span class=\"attr\">queue</span>=<span class=\"string\">&quot;spring_topic_queue_well2&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rabbit:bindings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">rabbit:topic-exchange</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--定义rabbitTemplate对象操作可以在代码中方便发送消息--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;rabbitTemplate&quot;</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">&quot;connectionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"514-发送消息\"><a class=\"markdownIt-Anchor\" href=\"#514-发送消息\">#</a> 5.1.4. 发送消息</h3>\n<p>创建测试文件  <code>spring-rabbitmq-producer\\src\\test\\java\\com\\itheima\\rabbitmq\\ProducerTest.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration(locations = &quot;classpath:spring/spring-rabbitmq.xml&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProducerTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 只发队列消息</span></span><br><span class=\"line\"><span class=\"comment\">     * 默认交换机类型为 direct</span></span><br><span class=\"line\"><span class=\"comment\">     * 交换机的名称为空，路由键为队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">queueTest</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//路由键与队列同名</span></span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_queue&quot;</span>, <span class=\"string\">&quot;只发队列spring_queue的消息。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 发送广播</span></span><br><span class=\"line\"><span class=\"comment\">     * 交换机类型为 fanout</span></span><br><span class=\"line\"><span class=\"comment\">     * 绑定到该交换机的所有队列都能够收到消息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fanoutTest</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：路由键名（广播设置为空）</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：发送的消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_fanout_exchange&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;发送到spring_fanout_exchange交换机的广播消息&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 通配符</span></span><br><span class=\"line\"><span class=\"comment\">     * 交换机类型为 topic</span></span><br><span class=\"line\"><span class=\"comment\">     * 匹配路由键的通配符，*表示一个单词，#表示多个单词</span></span><br><span class=\"line\"><span class=\"comment\">     * 绑定到该交换机的匹配队列能够收到对应消息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">topicTest</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数1：交换机名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数2：路由键名</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数3：发送的消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_topic_exchange&quot;</span>, <span class=\"string\">&quot;heima.bj&quot;</span>, <span class=\"string\">&quot;发送到spring_topic_exchange交换机heima.bj的消息&quot;</span>);</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_topic_exchange&quot;</span>, <span class=\"string\">&quot;heima.bj.1&quot;</span>, <span class=\"string\">&quot;发送到spring_topic_exchange交换机heima.bj.1的消息&quot;</span>);</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_topic_exchange&quot;</span>, <span class=\"string\">&quot;heima.bj.2&quot;</span>, <span class=\"string\">&quot;发送到spring_topic_exchange交换机heima.bj.2的消息&quot;</span>);</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(<span class=\"string\">&quot;spring_topic_exchange&quot;</span>, <span class=\"string\">&quot;itcast.cn&quot;</span>, <span class=\"string\">&quot;发送到spring_topic_exchange交换机itcast.cn的消息&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"52-搭建消费者工程\"><a class=\"markdownIt-Anchor\" href=\"#52-搭建消费者工程\">#</a> 5.2. 搭建消费者工程</h2>\n<h3 id=\"521-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#521-创建工程\">#</a> 5.2.1. 创建工程</h3>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1565149374831.png\"\n                      alt=\"1565149374831\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1565144775216.png\"\n                      alt=\"1565144775216\"\n                ></p>\n<h3 id=\"522-添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#522-添加依赖\">#</a> 5.2.2. 添加依赖</h3>\n<p>修改 pom.xml 文件内容为如下：</p>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-rabbitmq-consumer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.7.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.amqp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-rabbit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.8.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"523-配置整合\"><a class=\"markdownIt-Anchor\" href=\"#523-配置整合\">#</a> 5.2.3. 配置整合</h3>\n<ol>\n<li>创建 <code>spring-rabbitmq-consumer\\src\\main\\resources\\properties\\rabbitmq.properties</code>  连接参数等配置文件；</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Properties\"><figure class=\"iseeu highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">rabbitmq.host</span>=<span class=\"string\">192.168.12.135</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.port</span>=<span class=\"string\">5672</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.username</span>=<span class=\"string\">heima</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.password</span>=<span class=\"string\">heima</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq.virtual-host</span>=<span class=\"string\">/itcast</span></span><br></pre></td></tr></table></figure></div>\n<ol start=\"2\">\n<li>创建  <code>spring-rabbitmq-consumer\\src\\main\\resources\\spring\\spring-rabbitmq.xml</code>  整合配置文件；</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:rabbit</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/rabbit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/rabbit</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--加载配置文件--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath:properties/rabbitmq.properties&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 定义rabbitmq connectionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:connection-factory</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;connectionFactory&quot;</span> <span class=\"attr\">host</span>=<span class=\"string\">&quot;$&#123;rabbitmq.host&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">port</span>=<span class=\"string\">&quot;$&#123;rabbitmq.port&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">username</span>=<span class=\"string\">&quot;$&#123;rabbitmq.username&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">password</span>=<span class=\"string\">&quot;$&#123;rabbitmq.password&#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                               <span class=\"attr\">virtual-host</span>=<span class=\"string\">&quot;$&#123;rabbitmq.virtual-host&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;springQueueListener&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.SpringQueueListener&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fanoutListener1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.FanoutListener1&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fanoutListener2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.FanoutListener2&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;topicListenerStar&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.TopicListenerStar&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;topicListenerWell&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.TopicListenerWell&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;topicListenerWell2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.rabbitmq.listener.TopicListenerWell2&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener-container</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">&quot;connectionFactory&quot;</span> <span class=\"attr\">auto-declare</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;springQueueListener&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_queue&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;fanoutListener1&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_fanout_queue_1&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;fanoutListener2&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_fanout_queue_2&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;topicListenerStar&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_topic_queue_star&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;topicListenerWell&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_topic_queue_well&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rabbit:listener</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;topicListenerWell2&quot;</span> <span class=\"attr\">queue-names</span>=<span class=\"string\">&quot;spring_topic_queue_well2&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">rabbit:listener-container</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"524-消息监听器\"><a class=\"markdownIt-Anchor\" href=\"#524-消息监听器\">#</a> 5.2.4. 消息监听器</h3>\n<h4 id=\"1队列监听器\"><a class=\"markdownIt-Anchor\" href=\"#1队列监听器\">#</a> 1）队列监听器</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\SpringQueueListener.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringQueueListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2广播监听器1\"><a class=\"markdownIt-Anchor\" href=\"#2广播监听器1\">#</a> 2）广播监听器 1</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\FanoutListener1.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FanoutListener1</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;广播监听器1：接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"3广播监听器2\"><a class=\"markdownIt-Anchor\" href=\"#3广播监听器2\">#</a> 3）广播监听器 2</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\FanoutListener2.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FanoutListener2</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;广播监听器2：接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"4星号通配符监听器\"><a class=\"markdownIt-Anchor\" href=\"#4星号通配符监听器\">#</a> 4）星号通配符监听器</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\TopicListenerStar.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TopicListenerStar</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;通配符*监听器：接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"5井号通配符监听器\"><a class=\"markdownIt-Anchor\" href=\"#5井号通配符监听器\">#</a> 5）井号通配符监听器</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\TopicListenerWell.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TopicListenerWell</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;通配符#监听器：接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"6井号通配符监听器2\"><a class=\"markdownIt-Anchor\" href=\"#6井号通配符监听器2\">#</a> 6）井号通配符监听器 2</h4>\n<p>创建  <code>spring-rabbitmq-consumer\\src\\main\\java\\com\\itheima\\rabbitmq\\listener\\TopicListenerWell2.java</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TopicListenerWell2</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MessageListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(message.getBody(), <span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;通配符#监听器2：接收路由名称为：%s，路由键为：%s，队列名为：%s的消息：%s \\n&quot;</span>,</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedExchange(),</span><br><span class=\"line\">                    message.getMessageProperties().getReceivedRoutingKey(),</span><br><span class=\"line\">                    message.getMessageProperties().getConsumerQueue(),</span><br><span class=\"line\">                    msg);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h1 id=\"6-spring-boot整合rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#6-spring-boot整合rabbitmq\">#</a> 6. Spring Boot 整合 RabbitMQ</h1>\n<h2 id=\"61-简介\"><a class=\"markdownIt-Anchor\" href=\"#61-简介\">#</a> 6.1. 简介</h2>\n<p>在 Spring 项目中，可以使用 Spring-Rabbit 去操作 RabbitMQ<br>\n<a class=\"link\"   href=\"https://github.com/spring-projects/spring-amqp\" >https://github.com/spring-projects/spring-amqp <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>尤其是在 spring boot 项目中只需要引入对应的 amqp 启动器依赖即可，方便的使用 RabbitTemplate 发送消息，使用注解接收消息。</p>\n<p><em>一般在开发过程中</em>：</p>\n<p><strong>生产者工程：</strong></p>\n<ol>\n<li>\n<p>application.yml 文件配置 RabbitMQ 相关信息；</p>\n</li>\n<li>\n<p>在生产者工程中编写配置类，用于创建交换机和队列，并进行绑定</p>\n</li>\n<li>\n<p>注入 RabbitTemplate 对象，通过 RabbitTemplate 对象发送消息到交换机</p>\n</li>\n</ol>\n<p><strong>消费者工程：</strong></p>\n<ol>\n<li>\n<p>application.yml 文件配置 RabbitMQ 相关信息</p>\n</li>\n<li>\n<p>创建消息处理类，用于接收队列中的消息并进行处理</p>\n</li>\n</ol>\n<h2 id=\"52-搭建生产者工程\"><a class=\"markdownIt-Anchor\" href=\"#52-搭建生产者工程\">#</a> 5.2. 搭建生产者工程</h2>\n<h3 id=\"521-创建工程-2\"><a class=\"markdownIt-Anchor\" href=\"#521-创建工程-2\">#</a> 5.2.1. 创建工程</h3>\n<p>创建生产者工程 springboot-rabbitmq-producer</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558321303612.png\"\n                      alt=\"1556072078816\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558321417385.png\"\n                      alt=\"1556072084653\"\n                ></p>\n<h3 id=\"522-添加依赖-2\"><a class=\"markdownIt-Anchor\" href=\"#522-添加依赖-2\">#</a> 5.2.2. 添加依赖</h3>\n<p>修改 pom.xml 文件内容为如下：</p>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-rabbitmq-producer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"523-启动类\"><a class=\"markdownIt-Anchor\" href=\"#523-启动类\">#</a> 5.2.3. 启动类</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProducerApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(ProducerApplication.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"524-配置rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#524-配置rabbitmq\">#</a> 5.2.4. 配置 RabbitMQ</h3>\n<h4 id=\"1配置文件\"><a class=\"markdownIt-Anchor\" href=\"#1配置文件\">#</a> 1）配置文件</h4>\n<p>创建 application.yml，内容如下：</p>\n<div class=\"highlight-container\" data-rel=\"Yml\"><figure class=\"iseeu highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/itcast</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">heima</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">heima</span></span><br></pre></td></tr></table></figure></div>\n<h4 id=\"2绑定交换机和队列\"><a class=\"markdownIt-Anchor\" href=\"#2绑定交换机和队列\">#</a> 2）绑定交换机和队列</h4>\n<p>创建 RabbitMQ 队列与交换机绑定的配置类 com.itheima.rabbitmq.config.RabbitMQConfig</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RabbitMQConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//交换机名称</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ITEM_TOPIC_EXCHANGE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;item_topic_exchange&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//队列名称</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">ITEM_QUEUE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;item_queue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//声明交换机</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;itemTopicExchange&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Exchange <span class=\"title function_\">topicExchange</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ExchangeBuilder.topicExchange(ITEM_TOPIC_EXCHANGE).durable(<span class=\"literal\">true</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//声明队列</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;itemQueue&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Queue <span class=\"title function_\">itemQueue</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> QueueBuilder.durable(ITEM_QUEUE).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//绑定队列和交换机</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Binding <span class=\"title function_\">itemQueueExchange</span><span class=\"params\">(<span class=\"meta\">@Qualifier(&quot;itemQueue&quot;)</span> Queue queue,</span></span><br><span class=\"line\"><span class=\"params\">                                     <span class=\"meta\">@Qualifier(&quot;itemTopicExchange&quot;)</span> Exchange exchange)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BindingBuilder.bind(queue).to(exchange).with(<span class=\"string\">&quot;item.#&quot;</span>).noargs();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"53-搭建消费者工程\"><a class=\"markdownIt-Anchor\" href=\"#53-搭建消费者工程\">#</a> 5.3. 搭建消费者工程</h2>\n<h3 id=\"531-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#531-创建工程\">#</a> 5.3.1. 创建工程</h3>\n<p>创建消费者工程 springboot-rabbitmq-consumer</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558322109359.png\"\n                      alt=\"1556073553841\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1558322192435.png\"\n                      alt=\"1556073567786\"\n                ></p>\n<h3 id=\"532-添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#532-添加依赖\">#</a> 5.3.2. 添加依赖</h3>\n<p>修改 pom.xml 文件内容为如下：</p>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.itheima<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springboot-rabbitmq-consumer<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"533-启动类\"><a class=\"markdownIt-Anchor\" href=\"#533-启动类\">#</a> 5.3.3. 启动类</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConsumerApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(ConsumerApplication.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"534-配置rabbitmq\"><a class=\"markdownIt-Anchor\" href=\"#534-配置rabbitmq\">#</a> 5.3.4. 配置 RabbitMQ</h3>\n<p>创建 application.yml，内容如下：</p>\n<div class=\"highlight-container\" data-rel=\"Yml\"><figure class=\"iseeu highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">virtual-host:</span> <span class=\"string\">/itcast</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">heima</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">heima</span></span><br></pre></td></tr></table></figure></div>\n<h3 id=\"535-消息监听处理类\"><a class=\"markdownIt-Anchor\" href=\"#535-消息监听处理类\">#</a> 5.3.5. 消息监听处理类</h3>\n<p>编写消息监听器 com.itheima.rabbitmq.listener.MyListener</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyListener</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 监听某个队列的消息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message 接收到的消息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@RabbitListener(queues = &quot;item_queue&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">myListener1</span><span class=\"params\">(String message)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;消费者接收到的消息为：&quot;</span> + message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"54-测试\"><a class=\"markdownIt-Anchor\" href=\"#54-测试\">#</a> 5.4. 测试</h2>\n<p>在生产者工程 springboot-rabbitmq-producer 中创建测试类，发送消息：</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.rabbitmq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.rabbitmq.config.RabbitMQConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RabbitMQTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RabbitTemplate rabbitTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(RabbitMQConfig.ITEM_TOPIC_EXCHANGE, <span class=\"string\">&quot;item.insert&quot;</span>, <span class=\"string\">&quot;商品新增，routing key 为item.insert&quot;</span>);</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(RabbitMQConfig.ITEM_TOPIC_EXCHANGE, <span class=\"string\">&quot;item.update&quot;</span>, <span class=\"string\">&quot;商品修改，routing key 为item.update&quot;</span>);</span><br><span class=\"line\">        rabbitTemplate.convertAndSend(RabbitMQConfig.ITEM_TOPIC_EXCHANGE, <span class=\"string\">&quot;item.delete&quot;</span>, <span class=\"string\">&quot;商品删除，routing key 为item.delete&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>先运行上述测试程序（交换机和队列才能先被声明和绑定），然后启动消费者；在消费者工程 springboot-rabbitmq-consumer 中控制台查看是否接收到对应消息。</p>\n<p>另外；也可以在 RabbitMQ 的管理控制台中查看到交换机与队列的绑定：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/1556074827222.png\"\n                      alt=\"1556074827222\"\n                ></p>\n",
            "tags": [
                "RabbitMQ"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "玖忆 • All posts by \"版本控制\" category",
    "description": "我本微末凡尘、可也心向天空",
    "home_page_url": "https://wait-you.github.io",
    "items": [
        {
            "id": "https://wait-you.github.io/2023/06/06/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "url": "https://wait-you.github.io/2023/06/06/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "title": "Git常用命令",
            "date_published": "2023-06-06T00:41:10.000Z",
            "content_html": "<h1 id=\"git常用命令\"><a class=\"markdownIt-Anchor\" href=\"#git常用命令\">#</a> Git 常用命令</h1>\n<h2 id=\"查看版本号\"><a class=\"markdownIt-Anchor\" href=\"#查看版本号\">#</a> 查看版本号</h2>\n<ul>\n<li>git --version</li>\n</ul>\n<h2 id=\"清屏\"><a class=\"markdownIt-Anchor\" href=\"#清屏\">#</a> 清屏</h2>\n<ul>\n<li>clear</li>\n</ul>\n<h2 id=\"设置签名\"><a class=\"markdownIt-Anchor\" href=\"#设置签名\">#</a> 设置签名</h2>\n<ul>\n<li>git config --global <a class=\"link\"   href=\"http://user.name\" >user.name <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> “dujinliang”</li>\n</ul>\n<h2 id=\"设置邮箱\"><a class=\"markdownIt-Anchor\" href=\"#设置邮箱\">#</a> 设置邮箱</h2>\n<ul>\n<li>git config --global user.email “<a class=\"link\"   href=\"mailto:1162378922@qq.com\" >1162378922@qq.com <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>”</li>\n</ul>\n<h2 id=\"查看设置\"><a class=\"markdownIt-Anchor\" href=\"#查看设置\">#</a> 查看设置</h2>\n<ul>\n<li>git config --global --list</li>\n</ul>\n<h2 id=\"切换目录\"><a class=\"markdownIt-Anchor\" href=\"#切换目录\">#</a> 切换目录</h2>\n<ul>\n<li>cd E:</li>\n</ul>\n<h2 id=\"本地仓库的初始化\"><a class=\"markdownIt-Anchor\" href=\"#本地仓库的初始化\">#</a> 本地仓库的初始化</h2>\n<ul>\n<li>git init</li>\n</ul>\n<h2 id=\"显示文件夹下的文件\"><a class=\"markdownIt-Anchor\" href=\"#显示文件夹下的文件\">#</a> 显示文件夹下的文件</h2>\n<ul>\n<li>ll</li>\n<li>ll -la\n<ul>\n<li>显示隐藏文件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"将文件提交到暂存区\"><a class=\"markdownIt-Anchor\" href=\"#将文件提交到暂存区\">#</a> 将文件提交到暂存区</h2>\n<ul>\n<li>git add Demo.txt</li>\n</ul>\n<h2 id=\"将暂存区中的内容提交到本地库\"><a class=\"markdownIt-Anchor\" href=\"#将暂存区中的内容提交到本地库\">#</a> 将暂存区中的内容提交到本地库</h2>\n<ul>\n<li>git commit -m “这是我提交的第一个文件” Demo.txt</li>\n</ul>\n<h2 id=\"查看工作区和暂存区的状态\"><a class=\"markdownIt-Anchor\" href=\"#查看工作区和暂存区的状态\">#</a> 查看工作区和暂存区的状态</h2>\n<ul>\n<li>git status</li>\n</ul>\n<h2 id=\"查看提交的历史记录从近到远\"><a class=\"markdownIt-Anchor\" href=\"#查看提交的历史记录从近到远\">#</a> 查看提交的历史记录（从近到远）</h2>\n<ul>\n<li>git log\n<ul>\n<li>到日志过多，会出现分页的效果</li>\n<li>下一页 ： 空格</li>\n<li>上一页 ：b</li>\n<li>到页尾，显示 END</li>\n<li>退出 ：q</li>\n</ul>\n</li>\n<li>git log --pretty=oneline\n<ul>\n<li>在一行中进行展示</li>\n</ul>\n</li>\n<li>git log --oneline\n<ul>\n<li>在一行进行展示，关键字是简写的</li>\n</ul>\n</li>\n<li>git reflog\n<ul>\n<li>在一行进行展示，关键字是简写的，有一个回退步数的显示，HEAD@{数字}，即回到当前这个历史版本需要走多少步</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"版本回退\"><a class=\"markdownIt-Anchor\" href=\"#版本回退\">#</a> 版本回退</h2>\n<ul>\n<li>git reset --hard 索引号\n<ul>\n<li>本地库指针移动的同时，重置暂存区，重置工作区</li>\n</ul>\n</li>\n<li>git reset --mixed 索引号\n<ul>\n<li>本地库的指针移动的同时，重置暂存区，但是工作区不动</li>\n</ul>\n</li>\n<li>git reset --soft\n<ul>\n<li>本地库指针移动的时候，暂存区和工作区都不动</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"删除文件\"><a class=\"markdownIt-Anchor\" href=\"#删除文件\">#</a> 删除文件</h2>\n<ul>\n<li>删除工作区中的文件\n<ul>\n<li>tm  Test.txt</li>\n</ul>\n</li>\n<li>将删除操作同步到暂存区\n<ul>\n<li>git add Test.txt</li>\n</ul>\n</li>\n<li>将删除操作同步到本地库\n<ul>\n<li>git commit -m “删除 Text.txt 文件” Test.txt</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"找回本地库中删除的文件\"><a class=\"markdownIt-Anchor\" href=\"#找回本地库中删除的文件\">#</a> 找回本地库中删除的文件</h2>\n<ul>\n<li>实际上就是将历史版本切换到刚才添加文件的那个版本即可\n<ul>\n<li>git reset --hard 索引号</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"找回暂存区中删除的文件\"><a class=\"markdownIt-Anchor\" href=\"#找回暂存区中删除的文件\">#</a> 找回暂存区中删除的文件</h2>\n<ul>\n<li>删除工作区数据\n<ul>\n<li>rm Test.txt</li>\n</ul>\n</li>\n<li>同步到缓存区\n<ul>\n<li>git add Test.txt</li>\n</ul>\n</li>\n<li>恢复暂存区中的数据\n<ul>\n<li>git reset --hard 索引号</li>\n<li>git reset --hard HEAD</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"比较文件\"><a class=\"markdownIt-Anchor\" href=\"#比较文件\">#</a> 比较文件</h2>\n<ul>\n<li>\n<p>git 是按照行为单位管理数据，所以删除一行，添加一行</p>\n</li>\n<li>\n<p>将工作区中的文件和暂存区中的文件进行比较</p>\n<ul>\n<li>git diff [文件名]</li>\n</ul>\n</li>\n<li>\n<p>多个文件的比对，比较工作区和暂存区中所有的差异</p>\n<ul>\n<li>git diff</li>\n</ul>\n</li>\n<li>\n<p>比较暂存区和工作区中的差别、</p>\n<ul>\n<li>git diff [历史版本] [文件名]</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分支\"><a class=\"markdownIt-Anchor\" href=\"#分支\">#</a> 分支</h2>\n<ul>\n<li>同时多个分支可以并发开发，互相不耽误，互相不影响，提高开发效率</li>\n<li>如果有一个分支功能开发失败，直接删除这个分支就可以了，不会对其他分支产生任何影响</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154218643.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n<h2 id=\"查看分支\"><a class=\"markdownIt-Anchor\" href=\"#查看分支\">#</a> 查看分支</h2>\n<ul>\n<li>git branch -v</li>\n</ul>\n<h2 id=\"创建分支\"><a class=\"markdownIt-Anchor\" href=\"#创建分支\">#</a> 创建分支</h2>\n<ul>\n<li>git branch branch01</li>\n<li>你在哪个分支上，是通过 * 来显示的</li>\n<li><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154444325.png\"\n                      alt=\"在这里插入图片描述\"\n                ></li>\n</ul>\n<h2 id=\"切换分支\"><a class=\"markdownIt-Anchor\" href=\"#切换分支\">#</a> 切换分支</h2>\n<ul>\n<li>git checkout branch01</li>\n<li><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154509695.png\"\n                      alt=\"在这里插入图片描述\"\n                ></li>\n</ul>\n<h2 id=\"合并分支\"><a class=\"markdownIt-Anchor\" href=\"#合并分支\">#</a> 合并分支</h2>\n<ul>\n<li>先切换到主方法中</li>\n<li>git merge branch01\n<ul>\n<li><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154531941.png\"\n                      alt=\"在这里插入图片描述\"\n                ></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看文件内容\"><a class=\"markdownIt-Anchor\" href=\"#查看文件内容\">#</a> 查看文件内容</h2>\n<ul>\n<li>cat Test5.txt</li>\n<li>出现冲突\n<ul>\n<li>\n<p>在用同一个文件的同一个位置修改</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154603510.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>经过商议，留下想要的</p>\n</li>\n<li>\n<p>将工作区中内容添加到暂存区</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154648468.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>然后进行 commit 操作</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154708513.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看别名\"><a class=\"markdownIt-Anchor\" href=\"#查看别名\">#</a> 查看别名</h2>\n<ul>\n<li>git remote -v</li>\n</ul>\n<h2 id=\"创建别名\"><a class=\"markdownIt-Anchor\" href=\"#创建别名\">#</a> 创建别名</h2>\n<ul>\n<li>\n<p>git remote add 别名 地址</p>\n<ul>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407154739663.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>fetch</p>\n<ul>\n<li>获取</li>\n</ul>\n</li>\n<li>\n<p>push</p>\n<ul>\n<li>推送</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"向远程库推送数据\"><a class=\"markdownIt-Anchor\" href=\"#向远程库推送数据\">#</a> 向远程库推送数据</h2>\n<ul>\n<li>git push 远程库别名 要推送的分支\n<ul>\n<li><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407160838761.png\"\n                      alt=\"在这里插入图片描述\"\n                ></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"从远程库克隆数据\"><a class=\"markdownIt-Anchor\" href=\"#从远程库克隆数据\">#</a> 从远程库克隆数据</h2>\n<ul>\n<li>\n<p>git clone 远程库的地址</p>\n</li>\n<li>\n<p>克隆操作可以帮我们完成</p>\n<ul>\n<li>初始化本地库</li>\n<li>将远程库内容完整的克隆到本地</li>\n<li>替我们创建远程库别名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"加入团队\"><a class=\"markdownIt-Anchor\" href=\"#加入团队\">#</a> 加入团队</h2>\n<ul>\n<li>可以从 GitHub 中 clone 对方的数据，但无法提交，可由对方向自己发送邀请，复制邀请链接，由被邀请者在浏览器中打开同意即可</li>\n</ul>\n<h2 id=\"拉取操作\"><a class=\"markdownIt-Anchor\" href=\"#拉取操作\">#</a> 拉取操作</h2>\n<ul>\n<li>pull 操作，相当于 fetch + merge</li>\n</ul>\n<h2 id=\"抓取操作\"><a class=\"markdownIt-Anchor\" href=\"#抓取操作\">#</a> 抓取操作</h2>\n<ul>\n<li>\n<p>git fetch origin master</p>\n</li>\n<li>\n<p>在抓取操作执行后，只是将远程库的内容下载到本地，但是工作区中的文件并没有更新，工作区中还是原先的内容</p>\n</li>\n<li>\n<p>抓取后可以去远程库看看内容是否正确</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407160902432.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>发现内容都正确，就可以进行合并操作了</p>\n<ul>\n<li>\n<p>合并之前应该将分支切换回来</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407160924479.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>进行合并：merge</p>\n</li>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407160942142.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n</ul>\n</li>\n<li>\n<p>远程库的拉取可以直接利用 pull 命令来完成</p>\n<ul>\n<li>git pull origin master</li>\n</ul>\n</li>\n</ul>\n<p><strong>区别</strong></p>\n<ul>\n<li>\n<p>fetch  + merge 操作</p>\n<ul>\n<li>为了保险，慎重</li>\n</ul>\n</li>\n<li>\n<p>pull</p>\n<ul>\n<li>代码简单，省事</li>\n</ul>\n</li>\n<li>\n<p>多人共同提交数据时，会出现冲突问题，当一个人提交完成后，另一个人提交时会报错，需要先抓取该数据，对冲突进行处理，再提交，再提交时，git commit “注释信息”, 此处不写文件名</p>\n</li>\n</ul>\n<h2 id=\"跨团队合作\"><a class=\"markdownIt-Anchor\" href=\"#跨团队合作\">#</a> 跨团队合作</h2>\n<ul>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://img-blog.csdnimg.cn/2021040716101181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BlbmFudXQ=,size_16,color_FFFFFF,t_70#pic_center\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>获取远程库地址</p>\n</li>\n<li>\n<p>进行 fork 操作</p>\n<ul>\n<li>进入账号后，复制地址</li>\n<li>点击 fork 操作</li>\n<li><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407161030420.png\"\n                      alt=\"在这里插入图片描述\"\n                ></li>\n</ul>\n</li>\n<li>\n<p>克隆操作</p>\n</li>\n<li>\n<p>然后更改数据，添加到暂存区，然后提交到本地库，然后 push 到远程库</p>\n</li>\n<li>\n<p>进行 pull request，等待审核</p>\n</li>\n<li>\n<p>进行审核</p>\n</li>\n<li>\n<p>可以互相留言</p>\n</li>\n<li>\n<p>确定通过后，merge 合并</p>\n</li>\n</ul>\n<h2 id=\"免密操作\"><a class=\"markdownIt-Anchor\" href=\"#免密操作\">#</a> 免密操作</h2>\n<ul>\n<li>\n<p>进入用户主目录中，</p>\n<ul>\n<li>cd ~</li>\n</ul>\n</li>\n<li>\n<p>执行命令，生成一个.ssh 目录</p>\n<ul>\n<li>ssh-keygen -t rsa -C GitHub 邮箱</li>\n<li>C 要大写，邮箱是 GitHub 注册的账号的时候对应的邮箱</li>\n<li>三次回车确认默认值即可</li>\n</ul>\n</li>\n<li>\n<p>发现在.ssh 目录下有两个文件</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407161051391.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>打开 id_rad.pub 文件，将里面的内容进行复制操作</p>\n</li>\n<li>\n<p>打开 GitHub 账号，找到 settings，ssh and gpg keys，new ssh keys</p>\n<ul>\n<li>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/20210407161122503.png\"\n                      alt=\"在这里插入图片描述\"\n                ></p>\n</li>\n<li>\n<p>生成密钥以后，就可以正常进行 push 操作了</p>\n<ul>\n<li>对 ssh 远程地址起别名</li>\n<li>展示别名</li>\n<li>添加到暂存区，提交到本地库，然后 push 到远程库（地址用的是 ssh 方式的地址）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"允许不相关历史的合并\"><a class=\"markdownIt-Anchor\" href=\"#允许不相关历史的合并\">#</a> 允许不相关历史的合并</h2>\n<ul>\n<li>\n<p>用于两个仓库有不同的开始点</p>\n</li>\n<li>\n<p>–allow -unrelated-histories</p>\n</li>\n<li>\n<p>git pull 地址 master --allow -unrelated-histories</p>\n<ul>\n<li>i 进入编辑</li>\n<li>ese 退出编辑，：wq 退出</li>\n</ul>\n</li>\n<li>\n<p>push 推送</p>\n<ul>\n<li>git push -u origin master -f</li>\n</ul>\n</li>\n<li>\n<p>这样远程库和本地库就可以交互了</p>\n</li>\n<li>\n<p>一般在开发中，先 pull 操作，再 push 操作，不会直接进行 push 操作</p>\n</li>\n</ul>\n",
            "tags": [
                "git"
            ]
        }
    ]
}
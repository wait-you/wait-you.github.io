{
    "version": "https://jsonfeed.org/version/1",
    "title": "玖忆 • All posts by \"java\" tag",
    "description": "我本微末凡尘、可也心向天空",
    "home_page_url": "https://wait-you.github.io",
    "items": [
        {
            "id": "https://wait-you.github.io/2023/06/06/JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/",
            "url": "https://wait-you.github.io/2023/06/06/JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/",
            "title": "JSR303数据校验",
            "date_published": "2023-06-06T00:44:31.000Z",
            "content_html": "<h1 id=\"jsr303数据校验\"><a class=\"markdownIt-Anchor\" href=\"#jsr303数据校验\">#</a> JSR303 数据校验</h1>\n<h2 id=\"使用流程\"><a class=\"markdownIt-Anchor\" href=\"#使用流程\">#</a> 使用流程</h2>\n<ol>\n<li>给 Bean 添加校验注解</li>\n<li>在控制层的参数处加一个注解 @Valid 或者 @Validated\n<ul>\n<li>校验错误会有默认的错误提示</li>\n</ul>\n</li>\n<li>给校验的 bean 后缀一个 BindingResult，就可以获取到校验的结果</li>\n<li>统一的异常处理\n<ul>\n<li>去除之前的 bindResult，让异常抛出</li>\n<li>ControllerAdvice，集中处理异常</li>\n<li>ExceptionHandler</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"错误提示\"><a class=\"markdownIt-Anchor\" href=\"#错误提示\">#</a> 错误提示</h2>\n<p>默认的错误提示，是满足需要的，所以需要自定义错误消息的返回</p>\n<p>在每一个注解的内部都有一个 message 属性， 默认错误消息是从 <code>javax.validation.constraints.NotEmpty.message</code>  配置文件中拿取</p>\n<p>可以在注解处，重写 message 自定义错误消息</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 品牌名</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@NotEmpty(message = &quot;不能为空&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String name;</span><br></pre></td></tr></table></figure></div>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220414100742816.png\"\n                      alt=\"image-20220414100742816\"\n                ></p>\n<p>在校验的 bean 后缀一个 BeanResult，并在方法内对校验结果进行判断</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ApiOperation(&quot;保存新的品牌&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/save&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse <span class=\"title function_\">saveBrand</span><span class=\"params\">(<span class=\"meta\">@Validated</span> <span class=\"meta\">@RequestBody</span> PmsBrand brand, BindingResult result)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result.hasErrors())&#123;</span><br><span class=\"line\">            Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">            <span class=\"comment\">//1.获取校验的错误结果</span></span><br><span class=\"line\">            result.getFieldErrors().forEach(item -&gt; &#123;</span><br><span class=\"line\">                <span class=\"comment\">//FiledError 获取到错误提示</span></span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> item.getDefaultMessage();</span><br><span class=\"line\">                <span class=\"comment\">//获取错误的属性的名字</span></span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">field</span> <span class=\"operator\">=</span> item.getField();</span><br><span class=\"line\">                map.put(field, message);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResultResponse.fail().message(<span class=\"string\">&quot;提交的数据不合法&quot;</span>).data(map);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        brandService.save(brand);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultResponse.ok();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n<p>查看最的返回结果：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220414115237136.png\"\n                      alt=\"image-20220414115237136\"\n                ></p>\n<h2 id=\"统一异常处理\"><a class=\"markdownIt-Anchor\" href=\"#统一异常处理\">#</a> 统一异常处理</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GlobalException</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(value = &#123;MethodArgumentNotValidException.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse <span class=\"title function_\">handlerNotValidException</span><span class=\"params\">(MethodArgumentNotValidException e)</span>&#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;数据校验出现问题&#123;&#125;，异常类型：&#123;&#125;&quot;</span>, e.getMessage(), e.getClass());</span><br><span class=\"line\">        <span class=\"type\">BindingResult</span> <span class=\"variable\">bindingResult</span> <span class=\"operator\">=</span> e.getBindingResult();</span><br><span class=\"line\">        Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        bindingResult.getFieldErrors().forEach(item -&gt; &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> item.getDefaultMessage();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">filed</span> <span class=\"operator\">=</span> item.getField();</span><br><span class=\"line\">            map.put(filed, message);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultResponse.build(<span class=\"number\">400</span>, <span class=\"string\">&quot;数据校验出现问题&quot;</span>).data(map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(Throwable.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse <span class=\"title function_\">handlerException</span><span class=\"params\">(Throwable e)</span>&#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;出现异常&#123;&#125;，异常类型：&#123;&#125;&quot;</span>, e.getMessage(), e.getCause());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultResponse.fail();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"关于异常状态码\"><a class=\"markdownIt-Anchor\" href=\"#关于异常状态码\">#</a> 关于异常状态码</h3>\n<ul>\n<li>错误码和错误信息定义类\n<ol>\n<li>错误码定义规则为 5 位数字</li>\n<li>前两位表示业务，最后三位表示错误码。例如 10001，10 通用 001 系统未知错误</li>\n<li>维护错误码后需要维护错误描述，将他们定义为枚举样式</li>\n</ol>\n</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">ResultCodeEnum</span> &#123;</span><br><span class=\"line\">    SUCCESS(<span class=\"number\">200</span>, <span class=\"string\">&quot;成功&quot;</span>),</span><br><span class=\"line\">    FAIL(<span class=\"number\">201</span>, <span class=\"string\">&quot;失败&quot;</span>),</span><br><span class=\"line\">    UNKNOW_EXCEPTION(<span class=\"number\">10000</span>, <span class=\"string\">&quot;系统未知异常&quot;</span>),</span><br><span class=\"line\">    VALID_EXCEPTION(<span class=\"number\">10001</span>, <span class=\"string\">&quot;参数格式校验失败&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    ResultCodeEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"分组校验\"><a class=\"markdownIt-Anchor\" href=\"#分组校验\">#</a> 分组校验</h2>\n<p>新增和修改的校验规则不同，采用分组来进行区分</p>\n<p>给校验注解表示什么情况需要进行校验，不指定分组是不会去校验的</p>\n<p>分组以接口的形式</p>\n<p>在控制层声明要校验的分组</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220414144444577.png\"\n                      alt=\"image-20220414144444577\"\n                ></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.wenhe9.gulimall.product.domain;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.wenhe9.common.valid.AddGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> cn.wenhe9.common.valid.UpdateGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.hibernate.validator.constraints.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 品牌</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@TableName</span> pms_brand</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@TableName(value =&quot;pms_brand&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PmsBrand</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 品牌id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(message = &quot;修改必须指定id&quot;, groups = &#123;UpdateGroup.class&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Null(message = &quot;新增不能指定id&quot;, groups = &#123;AddGroup.class&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long brandId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 品牌名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty(message = &quot;品牌名必须提交&quot;, groups = &#123;AddGroup.class, UpdateGroup.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 品牌logo地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty</span></span><br><span class=\"line\">    <span class=\"meta\">@URL(message = &quot;logo必须是一个合法的URL地址&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String logo;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 介绍</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String descript;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 显示状态[0-不显示；1-显示]</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer showStatus;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检索首字母</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty</span></span><br><span class=\"line\">    <span class=\"meta\">@Pattern(regexp = &quot;^[a-zA-z]$&quot;, message = &quot;检索首字母必须是一个字母&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String firstLetter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"meta\">@Min(value = 0, message = &quot;排序必须大于等于0&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer sort;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ApiOperation(&quot;保存新的品牌&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/save&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse <span class=\"title function_\">saveBrand</span><span class=\"params\">(<span class=\"meta\">@Validated(&#123;AddGroup.class&#125;)</span> <span class=\"meta\">@RequestBody</span> PmsBrand brand)</span>&#123;</span><br><span class=\"line\">        brandService.save(brand);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultResponse.ok();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"自定义校验\"><a class=\"markdownIt-Anchor\" href=\"#自定义校验\">#</a> 自定义校验</h2>\n<ol>\n<li>编写自定义校验注解</li>\n<li>编写一个自定义的校验注解</li>\n<li>关联自定义的检验器和自定义的检验注解</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.wenhe9.common.valid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Constraint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Payload;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.constraints.NotNull;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Documented;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Repeatable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.annotation.ElementType.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.annotation.ElementType.TYPE_USE;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.annotation.RetentionPolicy.RUNTIME;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> DuJinliang</span></span><br><span class=\"line\"><span class=\"comment\"> * 2022/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class &#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ListValue &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">message</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;&#123;cn.wenhe9.common.valid.ListValue.message&#125;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;?&gt;[] groups() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Payload</span>&gt;[] payload() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span>[] vals() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.wenhe9.common.valid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> DuJinliang</span></span><br><span class=\"line\"><span class=\"comment\"> * 2022/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ListValueConstraintValidator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ConstraintValidator</span>&lt;ListValue, Integer&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Set&lt;Integer&gt; set = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//初始化方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">(ListValue constraintAnnotation)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] vals = constraintAnnotation.vals();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> val : vals) &#123;</span><br><span class=\"line\">            set.add(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断是否校验成功</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 需要校验的值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValid</span><span class=\"params\">(Integer value, ConstraintValidatorContext context)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> set.contains(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<p>ValidationMessages.properties</p>\n<div class=\"highlight-container\" data-rel=\"Properties\"><figure class=\"iseeu highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">cn.wenhe9.common.valid.ListValue.message</span>=<span class=\"string\">必须提交指定的值</span></span><br></pre></td></tr></table></figure></div>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220414151211700.png\"\n                      alt=\"image-20220414151211700\"\n                ></p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://wait-you.github.io/2023/06/06/Java%E9%A1%B9%E7%9B%AE%E9%80%9A%E7%94%A8%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%B1%BB/",
            "url": "https://wait-you.github.io/2023/06/06/Java%E9%A1%B9%E7%9B%AE%E9%80%9A%E7%94%A8%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%B1%BB/",
            "title": "Java项目通用配置及工具类",
            "date_published": "2023-06-06T00:43:29.000Z",
            "content_html": "<h1 id=\"java项目通用配置及工具类\"><a class=\"markdownIt-Anchor\" href=\"#java项目通用配置及工具类\">#</a> Java 项目通用配置及工具类</h1>\n<h2 id=\"统一的返回结果\"><a class=\"markdownIt-Anchor\" href=\"#统一的返回结果\">#</a> 统一的返回结果</h2>\n<h3 id=\"返回结果类\"><a class=\"markdownIt-Anchor\" href=\"#返回结果类\">#</a> 返回结果类</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(&quot;全局统一返回结果类&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResultResponse</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 状态码</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Api</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回状态信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> T data;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResultResponse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">build</span><span class=\"params\">(T data)</span> &#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = <span class=\"keyword\">new</span> <span class=\"title class_\">ResultResponse</span>&lt;&gt;();</span><br><span class=\"line\">        resultResponse.setData(data);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">build</span><span class=\"params\">(T data, ResultResponseEnum responseEnum)</span> &#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = build(data);</span><br><span class=\"line\">        resultResponse.setCode(responseEnum.getCode());</span><br><span class=\"line\">        resultResponse.setMessage(responseEnum.getMessage());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">success</span><span class=\"params\">(T data)</span> &#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = build(data, ResultResponseEnum.SUCCESS);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">success</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = build(<span class=\"literal\">null</span>, ResultResponseEnum.SUCCESS);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">fail</span><span class=\"params\">(T data)</span>&#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = build(data, ResultResponseEnum.FAIL);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; ResultResponse&lt;T&gt; <span class=\"title function_\">fail</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        ResultResponse&lt;T&gt; resultResponse = build(<span class=\"literal\">null</span>, ResultResponseEnum.FAIL);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse&lt;T&gt; <span class=\"title function_\">code</span><span class=\"params\">(Integer code)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse&lt;T&gt; <span class=\"title function_\">message</span><span class=\"params\">(String message)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.message = message;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"统一的返回状态码和错误信息枚举类根据实际需要补充\"><a class=\"markdownIt-Anchor\" href=\"#统一的返回状态码和错误信息枚举类根据实际需要补充\">#</a> 统一的返回状态码和错误信息枚举类（根据实际需要补充）</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(&quot;全局统一返回结果类&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">ResultResponseEnum</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    SUCCESS(<span class=\"number\">20000</span>,<span class=\"string\">&quot;成功&quot;</span>),</span><br><span class=\"line\">    </span><br><span class=\"line\">    FAIL(<span class=\"number\">20001</span>, <span class=\"string\">&quot;失败&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    SERVICE_ERROR(<span class=\"number\">2012</span>, <span class=\"string\">&quot;服务异常&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    DATA_ERROR(<span class=\"number\">204</span>, <span class=\"string\">&quot;数据异常&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    ILLEGAL_REQUEST(<span class=\"number\">205</span>, <span class=\"string\">&quot;非法请求&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    REPEAT_SUBMIT(<span class=\"number\">206</span>, <span class=\"string\">&quot;重复提交&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    LOGIN_AUTH(<span class=\"number\">208</span>, <span class=\"string\">&quot;未登陆&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    PERMISSION(<span class=\"number\">209</span>, <span class=\"string\">&quot;没有权限&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    PHONE_CODE_ERROR(<span class=\"number\">211</span>, <span class=\"string\">&quot;手机验证码错误&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    EXPORT_DATA_ERROR(<span class=\"number\">21002</span>, <span class=\"string\">&quot;导出失败&quot;</span>),</span><br><span class=\"line\">    </span><br><span class=\"line\">    IMPORT_DATA_ERROR(<span class=\"number\">21003</span>, <span class=\"string\">&quot;导入失败&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    FILE_UPLOAD_ERROR( <span class=\"number\">21004</span>, <span class=\"string\">&quot;文件上传错误&quot;</span>),</span><br><span class=\"line\">    </span><br><span class=\"line\">    FILE_DELETE_ERROR( <span class=\"number\">21005</span>, <span class=\"string\">&quot;文件刪除错误&quot;</span>),</span><br><span class=\"line\">    </span><br><span class=\"line\">    SIGN_GET_ERROR(<span class=\"number\">21007</span>, <span class=\"string\">&quot;获取签名失败&quot;</span>),</span><br><span class=\"line\">    </span><br><span class=\"line\">    GET_ACCESS_TOKEN_ERROR(<span class=\"number\">21008</span>, <span class=\"string\">&quot;获取accessToken失败&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    VIDEO_NOT_FOUND(<span class=\"number\">21011</span>, <span class=\"string\">&quot;获取小节失败&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    USER_NOT_EXIST(<span class=\"number\">21012</span>, <span class=\"string\">&quot;用户不存在&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    PAY_ERROR(<span class=\"number\">21015</span>, <span class=\"string\">&quot;支付失败&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 状态码</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回状态信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\"></span><br><span class=\"line\">    ResultResponseEnum(Integer code, String message) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.message = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"全局异常处理\"><a class=\"markdownIt-Anchor\" href=\"#全局异常处理\">#</a> 全局异常处理</h2>\n<h3 id=\"自定义异常类\"><a class=\"markdownIt-Anchor\" href=\"#自定义异常类\">#</a> 自定义异常类</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WenheException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">RuntimeException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ResultResponse&lt;Void&gt; resultResponse;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">WenheException</span><span class=\"params\">(ResultResponse&lt;Void&gt; resultResponse)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.resultResponse = resultResponse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">WenheException</span><span class=\"params\">(ResultResponseEnum responseEnum)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.resultResponse = ResultResponse.build(<span class=\"literal\">null</span>, responseEnum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"统一异常处理类根据实际需要补充其他的异常处理方法\"><a class=\"markdownIt-Anchor\" href=\"#统一异常处理类根据实际需要补充其他的异常处理方法\">#</a> 统一异常处理类（根据实际需要，补充其他的异常处理方法）</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestControllerAdvice</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GlobalExceptionHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自定义异常 WenheException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(value = &#123;WenheException.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse&lt;Void&gt; <span class=\"title function_\">handlerMemException</span><span class=\"params\">(WenheException e)</span>&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"type\">StackTraceElement</span> <span class=\"variable\">stackTraceElement</span> <span class=\"operator\">=</span> e.getStackTrace()[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"comment\">//打印异常信息</span></span><br><span class=\"line\">        log.error(</span><br><span class=\"line\">                <span class=\"string\">&quot;在&#123;&#125;类的&#123;&#125;方法的第&#123;&#125;行，出现&#123;&#125;异常&quot;</span>,</span><br><span class=\"line\">                stackTraceElement.getClassName(),</span><br><span class=\"line\">                stackTraceElement.getMethodName(),</span><br><span class=\"line\">                stackTraceElement.getLineNumber(),</span><br><span class=\"line\">                e.getResultResponse().getMessage()</span><br><span class=\"line\">        );</span><br><span class=\"line\">        <span class=\"keyword\">return</span> e.getResultResponse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理 throwable 异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(value = &#123;Throwable.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResultResponse <span class=\"title function_\">handlerException</span><span class=\"params\">(Throwable e)</span> &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"type\">StackTraceElement</span> <span class=\"variable\">stackTraceElement</span> <span class=\"operator\">=</span> e.getStackTrace()[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"comment\">//打印异常信息</span></span><br><span class=\"line\">        log.error(</span><br><span class=\"line\">                <span class=\"string\">&quot;在&#123;&#125;类的&#123;&#125;方法的第&#123;&#125;行，出现&#123;&#125;异常&quot;</span>,</span><br><span class=\"line\">                stackTraceElement.getClassName(),</span><br><span class=\"line\">                stackTraceElement.getMethodName(),</span><br><span class=\"line\">                stackTraceElement.getLineNumber(),</span><br><span class=\"line\">                e.getMessage()</span><br><span class=\"line\">        );</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResultResponse.fail().message(ResultResponseEnum.SERVICE_ERROR.getMessage());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"swagger-接口文档配置\"><a class=\"markdownIt-Anchor\" href=\"#swagger-接口文档配置\">#</a> Swagger 接口文档配置</h2>\n<h3 id=\"swagger配置类通过更改路径过滤规则可以显式不同的接口\"><a class=\"markdownIt-Anchor\" href=\"#swagger配置类通过更改路径过滤规则可以显式不同的接口\">#</a> swagger 配置类（通过更改路径过滤规则可以显式不同的接口）</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableSwagger2</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwaggerConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Docket <span class=\"title function_\">webApiConfig</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class=\"line\">                .groupName(<span class=\"string\">&quot;wenhe9&quot;</span>)</span><br><span class=\"line\">                .apiInfo(webApiInfo())</span><br><span class=\"line\">                .select()</span><br><span class=\"line\">                <span class=\"comment\">//只显示api路径下的页面</span></span><br><span class=\"line\">                <span class=\"comment\">//.paths(Predicates.and(PathSelectors.regex(&quot;/api/.*&quot;)))</span></span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ApiInfo <span class=\"title function_\">webApiInfo</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ApiInfoBuilder</span>()</span><br><span class=\"line\">                .title(<span class=\"string\">&quot;网站-API文档&quot;</span>)</span><br><span class=\"line\">                .description(<span class=\"string\">&quot;本文档描述了网站微服务接口定义&quot;</span>)</span><br><span class=\"line\">                .version(<span class=\"string\">&quot;1.0&quot;</span>)</span><br><span class=\"line\">                .contact(<span class=\"keyword\">new</span> <span class=\"title class_\">Contact</span>(<span class=\"string\">&quot;wenhe9&quot;</span>, <span class=\"string\">&quot;http://www.wenhe9.cn&quot;</span>, <span class=\"string\">&quot;dujinliang9@163.com&quot;</span>))</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"线程池配置\"><a class=\"markdownIt-Anchor\" href=\"#线程池配置\">#</a> 线程池配置</h2>\n<h3 id=\"线程池所需的属性类通过configurationproperties注解将参数由配置文件注入到属性中\"><a class=\"markdownIt-Anchor\" href=\"#线程池所需的属性类通过configurationproperties注解将参数由配置文件注入到属性中\">#</a> 线程池所需的属性类，通过 <code>ConfigurationProperties</code>  注解将参数由配置文件注入到属性中</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;wenhe9.thread&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreadPoolConfigProperties</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 核心线程数量</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer coreSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 救急线程数量 = 最大线程数量 - 核心线程数量</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer maxSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 救急线程没有任务的存活时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer keepAliveTime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"线程池配置类此处应根据实际业务需要定义多个线程池避免线程饥饿的发生\"><a class=\"markdownIt-Anchor\" href=\"#线程池配置类此处应根据实际业务需要定义多个线程池避免线程饥饿的发生\">#</a> 线程池配置类 (此处应根据实际业务需要，定义多个线程池，避免线程饥饿的发生)</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreadConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ThreadPoolExecutor <span class=\"title function_\">threadPoolExecutor</span><span class=\"params\">(ThreadPoolConfigProperties configProperties)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(</span><br><span class=\"line\">                configProperties.getCoreSize(),</span><br><span class=\"line\">                configProperties.getMaxSize(),</span><br><span class=\"line\">                configProperties.getKeepAliveTime(),</span><br><span class=\"line\">                TimeUnit.SECONDS,</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedBlockingQueue</span>&lt;&gt;(<span class=\"number\">100000</span>),</span><br><span class=\"line\">                Executors.defaultThreadFactory(),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>.AbortPolicy()</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"mybatisplus配置\"><a class=\"markdownIt-Anchor\" href=\"#mybatisplus配置\">#</a> MybatisPlus 配置</h2>\n<h3 id=\"配置类\"><a class=\"markdownIt-Anchor\" href=\"#配置类\">#</a> 配置类</h3>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;cn.wenhe9.ggkt.*.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 新的分页插件,一缓和二缓遵循mybatis的规则,需要设置 MybatisConfiguration#useDeprecatedExecutor = false 避免缓存出现问题(该属性会在旧插件移除后一同移除)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">        interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.H2));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ConfigurationCustomizer <span class=\"title function_\">configurationCustomizer</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> configuration -&gt; configuration.setUseDeprecatedExecutor(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"配置文件\"><a class=\"markdownIt-Anchor\" href=\"#配置文件\">#</a> 配置文件</h3>\n<div class=\"highlight-container\" data-rel=\"Yml\"><figure class=\"iseeu highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mybatis-plus:</span></span><br><span class=\"line\">  <span class=\"attr\">configuration:</span></span><br><span class=\"line\">  \t<span class=\"comment\"># mybatis日志</span></span><br><span class=\"line\">    <span class=\"attr\">log-impl:</span> <span class=\"string\">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class=\"line\">    <span class=\"comment\"># 数据库映射实体类下划线变小驼峰</span></span><br><span class=\"line\">    <span class=\"attr\">map-underscore-to-camel-case:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 指定实体类对应的包名，以首字母小写为别名</span></span><br><span class=\"line\">  <span class=\"attr\">type-aliases-package:</span> <span class=\"string\">cn.wenhe9.ggkt.*.entity</span></span><br><span class=\"line\">  <span class=\"comment\"># mapper文件路径</span></span><br><span class=\"line\">  <span class=\"attr\">mapper-locations:</span> <span class=\"string\">classpath:mapper/*.xml</span></span><br><span class=\"line\">  <span class=\"attr\">global-config:</span></span><br><span class=\"line\">    <span class=\"attr\">db-config:</span></span><br><span class=\"line\">      <span class=\"comment\"># 逻辑删除字段名称</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-field:</span> <span class=\"string\">isDelete</span></span><br><span class=\"line\">      <span class=\"comment\"># 逻辑删除 未删除值</span></span><br><span class=\"line\">      <span class=\"attr\">logic-not-delete-value:</span> <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"comment\"># 逻辑删除 删除值</span></span><br><span class=\"line\">      <span class=\"attr\">logic-delete-value:</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure></div>\n<h2 id=\"跨域配置\"><a class=\"markdownIt-Anchor\" href=\"#跨域配置\">#</a> 跨域配置</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CorsWebFilter <span class=\"title function_\">corsWebFilter</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">CorsConfiguration</span> <span class=\"variable\">config</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CorsConfiguration</span>();</span><br><span class=\"line\">        config.addAllowedMethod(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        config.addAllowedOrigin(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        config.addAllowedHeader(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">UrlBasedCorsConfigurationSource</span> <span class=\"variable\">source</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UrlBasedCorsConfigurationSource</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">PathPatternParser</span>());</span><br><span class=\"line\">        source.registerCorsConfiguration(<span class=\"string\">&quot;/**&quot;</span>, config);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CorsWebFilter</span>(source);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"使用threadlocal存储用户信息\"><a class=\"markdownIt-Anchor\" href=\"#使用threadlocal存储用户信息\">#</a> 使用 ThreadLocal 存储用户信息</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AuthContextHolder</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 后台管理用户id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Long&gt; adminIdTL = <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadLocal</span>&lt;Long&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 会员用户id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Long&gt; userIdTL = <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadLocal</span>&lt;Long&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Long <span class=\"title function_\">getAdminId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> adminIdTL.get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAdminId</span><span class=\"params\">(Long adminId)</span> &#123;</span><br><span class=\"line\">        adminIdTL.set(adminId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Long <span class=\"title function_\">getUserId</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userIdTL.get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserId</span><span class=\"params\">(Long userId)</span>&#123;</span><br><span class=\"line\">        userIdTL.set(userId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"策略模式-实现对用户的认证\"><a class=\"markdownIt-Anchor\" href=\"#策略模式-实现对用户的认证\">#</a> 策略模式 实现对用户的认证</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AuthStrategy</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户请求验证</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">auth</span><span class=\"params\">(String token)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 默认验证方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span> Long <span class=\"title function_\">authSSO</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(token)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// token 为空</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">WenheException</span>(ResultResponseEnum.LOGIN_AUTH);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> JwtHelper.getUserId(token);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Objects.isNull(userId)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// token 解析失败</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">WenheException</span>(ResultResponseEnum.LOGIN_AUTH);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 设置 userId 到当前线程</span></span><br><span class=\"line\">        AuthContextHolder.setUserId(userId);</span><br><span class=\"line\">        <span class=\"comment\">// 返回 userId</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AdminAuthStrategy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthStrategy</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">auth</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(token)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">GgktException</span>(ResultResponseEnum.LOGIN_AUTH);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!SystemConfigConstant.ADMIN_TOKEN.equals(token)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">GgktException</span>(ResultResponseEnum.LOGIN_AUTH);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        AuthContextHolder.setAdminId(<span class=\"number\">1L</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ApiAuthStrategy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AuthStrategy</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">auth</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        authSSO(token);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"spring-cloud-gateway-全局认证过滤器\"><a class=\"markdownIt-Anchor\" href=\"#spring-cloud-gateway-全局认证过滤器\">#</a> Spring Cloud Gateway 全局认证过滤器</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GlobalAuthFilter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">GlobalFilter</span>, Ordered &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectMapper objectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, AuthStrategy&gt; authStrategy;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">AntPathMatcher</span> <span class=\"variable\">antPathMatcher</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AntPathMatcher</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Mono&lt;Void&gt; <span class=\"title function_\">filter</span><span class=\"params\">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ServerHttpRequest</span> <span class=\"variable\">request</span> <span class=\"operator\">=</span> exchange.getRequest();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (HttpMethod.OPTIONS.equals(request.getMethod())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> chain.filter(exchange);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> request.getHeaders().getFirst(SystemConfigConstant.HTTP_AUTH_HEADER_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> request.getURI().getPath();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;path=&#123;&#125;&quot;</span>, path);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (</span><br><span class=\"line\">                antPathMatcher.match(SystemConfigConstant.LOGIN_URL, path)</span><br><span class=\"line\">                        ||</span><br><span class=\"line\">                antPathMatcher.match(SystemConfigConstant.WECHAT_MESSAGE_URL, path)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> chain.filter(exchange);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">authStrategyName</span> <span class=\"operator\">=</span> path.substring(<span class=\"number\">1</span>, path.indexOf(<span class=\"string\">&quot;/&quot;</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\">        authStrategyName = String.format(<span class=\"string\">&quot;%sAuthStrategy&quot;</span>, authStrategyName);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            authStrategy.get(authStrategyName).auth(token);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> chain.filter(exchange);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (WenheException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> loginAuth(exchange);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Mono&lt;Void&gt; <span class=\"title function_\">out</span><span class=\"params\">(ServerHttpResponse response, ResultResponseEnum resultCodeEnum)</span> <span class=\"keyword\">throws</span> JsonProcessingException &#123;</span><br><span class=\"line\">        ResultResponse&lt;Object&gt; result = ResultResponse.build(<span class=\"literal\">null</span>, resultCodeEnum);</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = objectMapper.writeValueAsString(result).getBytes(StandardCharsets.UTF_8);</span><br><span class=\"line\">        <span class=\"type\">DataBuffer</span> <span class=\"variable\">buffer</span> <span class=\"operator\">=</span> response.bufferFactory().wrap(bytes);</span><br><span class=\"line\">        <span class=\"comment\">//指定编码，否则在浏览器中会中文乱码</span></span><br><span class=\"line\">        response.getHeaders().add(<span class=\"string\">&quot;Content-Type&quot;</span>, <span class=\"string\">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response.writeWith(Mono.just(buffer));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Mono&lt;Void&gt; <span class=\"title function_\">loginAuth</span><span class=\"params\">(ServerWebExchange exchange)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">ServerHttpResponse</span> <span class=\"variable\">response</span> <span class=\"operator\">=</span> exchange.getResponse();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> out(response, ResultResponseEnum.LOGIN_AUTH);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JsonProcessingException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">WenheException</span>(ResultResponseEnum.FAIL);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getOrder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"mysql-通用基类\"><a class=\"markdownIt-Anchor\" href=\"#mysql-通用基类\">#</a> MySQL 通用基类</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseEntity</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableId(type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;创建时间&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(&quot;create_time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;更新时间&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(&quot;update_time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;逻辑删除(1:已删除，0:未删除)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"meta\">@TableLogic</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(&quot;is_deleted&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer isDeleted;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;其他参数&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@TableField(exist = false)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String,Object&gt; param = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"mongodb-通用基类\"><a class=\"markdownIt-Anchor\" href=\"#mongodb-通用基类\">#</a> MongoDB 通用基类</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseMongoEntity</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;id&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;创建时间&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@CreatedDate</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;更新时间&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@LastModifiedDate</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date updateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiModelProperty(value = &quot;其他参数&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@Transient</span> <span class=\"comment\">//被该注解标注的，将不会被录入到数据库中。只作为普通的javaBean属性</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String,Object&gt; param = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"httpclient-工具类\"><a class=\"markdownIt-Anchor\" href=\"#httpclient-工具类\">#</a> HttpClient 工具类</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HttpClientUtils</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> Map&lt;String, String&gt; param;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">int</span> statusCode;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String content;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String xmlParam;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> isHttps;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isHttps</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> isHttps;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setHttps</span><span class=\"params\">(<span class=\"type\">boolean</span> isHttps)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.isHttps = isHttps;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getXmlParam</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> xmlParam;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setXmlParam</span><span class=\"params\">(String xmlParam)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.xmlParam = xmlParam;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"title function_\">HttpClientUtils</span><span class=\"params\">(String url, Map&lt;String, String&gt; param)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.url = url;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.param = param;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"title function_\">HttpClientUtils</span><span class=\"params\">(String url)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.url = url;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setParameter</span><span class=\"params\">(Map&lt;String, String&gt; map)</span> &#123;</span><br><span class=\"line\">      param = map;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addParameter</span><span class=\"params\">(String key, String value)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (param == <span class=\"literal\">null</span>)</span><br><span class=\"line\">         param = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;String, String&gt;();</span><br><span class=\"line\">      param.put(key, value);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">post</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ClientProtocolException, IOException &#123;</span><br><span class=\"line\">      <span class=\"type\">HttpPost</span> <span class=\"variable\">http</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HttpPost</span>(url);</span><br><span class=\"line\">      setEntity(http);</span><br><span class=\"line\">      execute(http);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">put</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ClientProtocolException, IOException &#123;</span><br><span class=\"line\">      <span class=\"type\">HttpPut</span> <span class=\"variable\">http</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HttpPut</span>(url);</span><br><span class=\"line\">      setEntity(http);</span><br><span class=\"line\">      execute(http);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">get</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ClientProtocolException, IOException &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (param != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">         <span class=\"type\">StringBuilder</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"built_in\">this</span>.url);</span><br><span class=\"line\">         <span class=\"type\">boolean</span> <span class=\"variable\">isFirst</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (String key : param.keySet()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isFirst) &#123;</span><br><span class=\"line\">               url.append(<span class=\"string\">&quot;?&quot;</span>);</span><br><span class=\"line\">               isFirst = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               url.append(<span class=\"string\">&quot;&amp;&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            url.append(key).append(<span class=\"string\">&quot;=&quot;</span>).append(param.get(key));</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"built_in\">this</span>.url = url.toString();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"type\">HttpGet</span> <span class=\"variable\">http</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HttpGet</span>(url);</span><br><span class=\"line\">      execute(http);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * set http post,put param</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setEntity</span><span class=\"params\">(HttpEntityEnclosingRequestBase http)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (param != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">         List&lt;NameValuePair&gt; nvps = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;NameValuePair&gt;();</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (String key : param.keySet())</span><br><span class=\"line\">            nvps.add(<span class=\"keyword\">new</span> <span class=\"title class_\">BasicNameValuePair</span>(key, param.get(key))); <span class=\"comment\">// 参数</span></span><br><span class=\"line\">         http.setEntity(<span class=\"keyword\">new</span> <span class=\"title class_\">UrlEncodedFormEntity</span>(nvps, Consts.UTF_8)); <span class=\"comment\">// 设置参数</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (xmlParam != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">         http.setEntity(<span class=\"keyword\">new</span> <span class=\"title class_\">StringEntity</span>(xmlParam, Consts.UTF_8));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(HttpUriRequest http)</span> <span class=\"keyword\">throws</span> ClientProtocolException,</span><br><span class=\"line\">         IOException &#123;</span><br><span class=\"line\">      <span class=\"type\">CloseableHttpClient</span> <span class=\"variable\">httpClient</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (isHttps) &#123;</span><br><span class=\"line\">            <span class=\"type\">SSLContext</span> <span class=\"variable\">sslContext</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SSLContextBuilder</span>()</span><br><span class=\"line\">                  .loadTrustMaterial(<span class=\"literal\">null</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">TrustStrategy</span>() &#123;</span><br><span class=\"line\">                     <span class=\"comment\">// 信任所有</span></span><br><span class=\"line\">                     <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isTrusted</span><span class=\"params\">(X509Certificate[] chain,</span></span><br><span class=\"line\"><span class=\"params\">                           String authType)</span></span><br><span class=\"line\">                           <span class=\"keyword\">throws</span> CertificateException &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                     &#125;</span><br><span class=\"line\">                  &#125;).build();</span><br><span class=\"line\">            <span class=\"type\">SSLConnectionSocketFactory</span> <span class=\"variable\">sslsf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SSLConnectionSocketFactory</span>(</span><br><span class=\"line\">                  sslContext);</span><br><span class=\"line\">            httpClient = HttpClients.custom().setSSLSocketFactory(sslsf)</span><br><span class=\"line\">                  .build();</span><br><span class=\"line\">         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            httpClient = HttpClients.createDefault();</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"type\">CloseableHttpResponse</span> <span class=\"variable\">response</span> <span class=\"operator\">=</span> httpClient.execute(http);</span><br><span class=\"line\">         <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (response != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (response.getStatusLine() != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                  statusCode = response.getStatusLine().getStatusCode();</span><br><span class=\"line\">               <span class=\"type\">HttpEntity</span> <span class=\"variable\">entity</span> <span class=\"operator\">=</span> response.getEntity();</span><br><span class=\"line\">               <span class=\"comment\">// 响应内容</span></span><br><span class=\"line\">               content = EntityUtils.toString(entity, Consts.UTF_8);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">         &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            response.close();</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">         e.printStackTrace();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">         httpClient.close();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getStatusCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> statusCode;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getContent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ParseException, IOException &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> content;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"jwttoken-工具类\"><a class=\"markdownIt-Anchor\" href=\"#jwttoken-工具类\">#</a> JwtToken 工具类</h2>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtTokenUtil</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">CLAIM_KEY_USERNAME</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;sub&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">CLAIM_KEY_CREATED</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;created&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jwt.secret&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String secret;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;jwt.expiration&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long expiration;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户信息生成token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userDetails</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">generateToken</span><span class=\"params\">(UserDetails userDetails)</span> &#123;</span><br><span class=\"line\">        Map&lt;String, Object&gt; claims = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        claims.put(CLAIM_KEY_USERNAME, userDetails.getUsername());</span><br><span class=\"line\">        claims.put(CLAIM_KEY_CREATED, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> generateToken(claims);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从token中获取用户名</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsernameFromToken</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        String username;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> getClaimsFromToken(token);</span><br><span class=\"line\">            username = claims.getSubject();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            username = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 验证token是否有效</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userDetails</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">validateToken</span><span class=\"params\">(String token, UserDetails userDetails)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> getUsernameFromToken(token);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userDetails.equals(username) &amp;&amp; !isTokenExpired(token);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断token是否可以刷新</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canRefresh</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !isTokenExpired(token);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">refreshToken</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> getClaimsFromToken(token);</span><br><span class=\"line\">        claims.put(CLAIM_KEY_CREATED, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> generateToken(claims);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断token是否失效</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isTokenExpired</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">expireDate</span> <span class=\"operator\">=</span> getExpiredDateFromToken(token);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> expireDate.before(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从token中获取过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date <span class=\"title function_\">getExpiredDateFromToken</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> getClaimsFromToken(token);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> claims.getExpiration();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从token中获取荷载</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Claims <span class=\"title function_\">getClaimsFromToken</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            claims = Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(secret)</span><br><span class=\"line\">                .parseClaimsJws(token)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> claims;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据荷载生成JWT TOKEN</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> claims</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">generateToken</span><span class=\"params\">(Map&lt;String, Object&gt; claims)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .setClaims(claims)</span><br><span class=\"line\">                .setExpiration(generateExpirationDate())</span><br><span class=\"line\">                .signWith(SignatureAlgorithm.ES512, secret)</span><br><span class=\"line\">                .compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成token失效时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date <span class=\"title function_\">generateExpirationDate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(System.currentTimeMillis() + expiration * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"resttemplate-实现https网络请求\"><a class=\"markdownIt-Anchor\" href=\"#resttemplate-实现https网络请求\">#</a> RestTemplate 实现 https 网络请求</h2>\n<h3 id=\"定义httpclientrequestfactory\"><a class=\"markdownIt-Anchor\" href=\"#定义httpclientrequestfactory\">#</a> 定义 <code>httpClientRequestFactory</code></h3>\n<p>之后要使用 <code>restTimplate</code>  时，只需要将这个类，以构造函数的参数传入即可，需要注意的是， <code>restTimplate</code>  需要手动创建，不能交由 <code>spring</code>  容器管理</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">RestTemplate</span> <span class=\"variable\">restTemplate</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RestTemplate</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">HttpsClientRequestFactory</span>());</span><br></pre></td></tr></table></figure></div>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HttpsClientRequestFactory</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">SimpleClientHttpRequestFactory</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">prepareConnection</span><span class=\"params\">(HttpURLConnection connection, String httpMethod)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(connection <span class=\"keyword\">instanceof</span> HttpsURLConnection)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;An instance of HttpsURLConnection is expected&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">HttpsURLConnection</span> <span class=\"variable\">httpsConnection</span> <span class=\"operator\">=</span> (HttpsURLConnection) connection;</span><br><span class=\"line\"></span><br><span class=\"line\">            TrustManager[] trustAllCerts = <span class=\"keyword\">new</span> <span class=\"title class_\">TrustManager</span>[]&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">new</span> <span class=\"title class_\">X509TrustManager</span>() &#123;</span><br><span class=\"line\">                        <span class=\"meta\">@Override</span></span><br><span class=\"line\">                        <span class=\"keyword\">public</span> java.security.cert.X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"meta\">@Override</span></span><br><span class=\"line\">                        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] certs, String authType)</span> &#123;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"meta\">@Override</span></span><br><span class=\"line\">                        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] certs, String authType)</span> &#123;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            <span class=\"type\">SSLContext</span> <span class=\"variable\">sslContext</span> <span class=\"operator\">=</span> SSLContext.getInstance(<span class=\"string\">&quot;TLS&quot;</span>);</span><br><span class=\"line\">            sslContext.init(<span class=\"literal\">null</span>, trustAllCerts, <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.security.SecureRandom());</span><br><span class=\"line\">            httpsConnection.setSSLSocketFactory(<span class=\"keyword\">new</span> <span class=\"title class_\">MyCustomSSLSocketFactory</span>(sslContext.getSocketFactory()));</span><br><span class=\"line\"></span><br><span class=\"line\">            httpsConnection.setHostnameVerifier(<span class=\"keyword\">new</span> <span class=\"title class_\">HostnameVerifier</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">verify</span><span class=\"params\">(String s, SSLSession sslSession)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">super</span>.prepareConnection(httpsConnection, httpMethod);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * SSLSocketFactory用于创建 SSLSockets</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyCustomSSLSocketFactory</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">SSLSocketFactory</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SSLSocketFactory delegate;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyCustomSSLSocketFactory</span><span class=\"params\">(SSLSocketFactory delegate)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.delegate = delegate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 返回默认启用的密码套件。除非一个列表启用，对SSL连接的握手会使用这些密码套件。</span></span><br><span class=\"line\">        <span class=\"comment\">// 这些默认的服务的最低质量要求保密保护和服务器身份验证</span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> String[] getDefaultCipherSuites() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> delegate.getDefaultCipherSuites();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 返回的密码套件可用于SSL连接启用的名字</span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> String[] getSupportedCipherSuites() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> delegate.getSupportedCipherSuites();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Socket <span class=\"title function_\">createSocket</span><span class=\"params\">(<span class=\"keyword\">final</span> Socket socket, <span class=\"keyword\">final</span> String host, <span class=\"keyword\">final</span> <span class=\"type\">int</span> port,</span></span><br><span class=\"line\"><span class=\"params\">                                   <span class=\"keyword\">final</span> <span class=\"type\">boolean</span> autoClose)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">Socket</span> <span class=\"variable\">underlyingSocket</span> <span class=\"operator\">=</span> delegate.createSocket(socket, host, port, autoClose);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> overrideProtocol(underlyingSocket);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Socket <span class=\"title function_\">createSocket</span><span class=\"params\">(<span class=\"keyword\">final</span> String host, <span class=\"keyword\">final</span> <span class=\"type\">int</span> port)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">Socket</span> <span class=\"variable\">underlyingSocket</span> <span class=\"operator\">=</span> delegate.createSocket(host, port);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> overrideProtocol(underlyingSocket);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Socket <span class=\"title function_\">createSocket</span><span class=\"params\">(<span class=\"keyword\">final</span> String host, <span class=\"keyword\">final</span> <span class=\"type\">int</span> port, <span class=\"keyword\">final</span> InetAddress localAddress,</span></span><br><span class=\"line\"><span class=\"params\">                                   <span class=\"keyword\">final</span> <span class=\"type\">int</span> localPort)</span> <span class=\"keyword\">throws</span></span><br><span class=\"line\">                IOException &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">Socket</span> <span class=\"variable\">underlyingSocket</span> <span class=\"operator\">=</span> delegate.createSocket(host, port, localAddress, localPort);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> overrideProtocol(underlyingSocket);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Socket <span class=\"title function_\">createSocket</span><span class=\"params\">(<span class=\"keyword\">final</span> InetAddress host, <span class=\"keyword\">final</span> <span class=\"type\">int</span> port)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">Socket</span> <span class=\"variable\">underlyingSocket</span> <span class=\"operator\">=</span> delegate.createSocket(host, port);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> overrideProtocol(underlyingSocket);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Socket <span class=\"title function_\">createSocket</span><span class=\"params\">(<span class=\"keyword\">final</span> InetAddress host, <span class=\"keyword\">final</span> <span class=\"type\">int</span> port, <span class=\"keyword\">final</span> InetAddress localAddress,</span></span><br><span class=\"line\"><span class=\"params\">                                   <span class=\"keyword\">final</span> <span class=\"type\">int</span> localPort)</span> <span class=\"keyword\">throws</span></span><br><span class=\"line\">                IOException &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">Socket</span> <span class=\"variable\">underlyingSocket</span> <span class=\"operator\">=</span> delegate.createSocket(host, port, localAddress, localPort);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> overrideProtocol(underlyingSocket);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Socket <span class=\"title function_\">overrideProtocol</span><span class=\"params\">(<span class=\"keyword\">final</span> Socket socket)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(socket <span class=\"keyword\">instanceof</span> SSLSocket)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;An instance of SSLSocket is expected&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ((SSLSocket) socket).setEnabledProtocols(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;TLSv1&quot;</span>&#125;);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> socket;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"git-提交规范\"><a class=\"markdownIt-Anchor\" href=\"#git-提交规范\">#</a> Git 提交规范</h2>\n<p>摘自 <a class=\"link\"   href=\"https://docs.xxyopen.com/course/novel/12.html#git-%E6%8F%90%E4%BA%A4%E8%A7%84%E7%BA%A6\" >https://docs.xxyopen.com/course/novel/12.html#git - 提交规约 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h3 id=\"格式\"><a class=\"markdownIt-Anchor\" href=\"#格式\">#</a> 格式</h3>\n<div class=\"highlight-container\" data-rel=\"Text\"><figure class=\"iseeu highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;type&gt;[scope]: &lt;subject&gt;</span><br><span class=\"line\">// 空一行</span><br><span class=\"line\">[body]</span><br><span class=\"line\">// 空一行</span><br><span class=\"line\">[footer]</span><br></pre></td></tr></table></figure></div>\n<p><strong>注：[] 代表可选，&lt;&gt; 代表必选。</strong></p>\n<h3 id=\"type\"><a class=\"markdownIt-Anchor\" href=\"#type\">#</a> type</h3>\n<p>必填，用于指定 commit 的类型。</p>\n<div class=\"highlight-container\" data-rel=\"Text\"><figure class=\"iseeu highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feat：增加新功能</span><br><span class=\"line\">fix：修复 bug</span><br><span class=\"line\">docs：只改动了文档相关的内容</span><br><span class=\"line\">style：格式修改，没有修改代码逻辑，比如格式化、换行等</span><br><span class=\"line\">refactor：重构代码，既没有新增功能，也没有修复 bug，比如提取某段代码为一个方法、重构某个功能等</span><br><span class=\"line\">perf：性能、体验优化等</span><br><span class=\"line\">test：新增 test 用例或修改现有测试用例</span><br><span class=\"line\">build：构造工具的或者外部依赖的改动，比如 maven</span><br><span class=\"line\">ci：与 CI（持续集成服务）有关的改动</span><br><span class=\"line\">chore：不修改 src 或者 test 的其余修改，例如构建过程或辅助工具的变动</span><br><span class=\"line\">revert：执行 git revert 打印的 message</span><br></pre></td></tr></table></figure></div>\n<p><strong>当同时有 feat、fix 和其他类型时，类型取 feat、fix。</strong></p>\n<h3 id=\"scope\"><a class=\"markdownIt-Anchor\" href=\"#scope\">#</a> scope</h3>\n<p>非必填，用于描述改动的范围，格式一般为项目名 / 模块名，如果一次 commit 修改多个模块，建议拆分成多次 commit，以便更好追踪和维护。</p>\n<h3 id=\"subject\"><a class=\"markdownIt-Anchor\" href=\"#subject\">#</a> subject</h3>\n<p>必填，此次提交的简短描述，动词开头，第一人称现在时，比如 add，而不用 added、adds，第一个字母小写，句尾不加句号（.）</p>\n<h3 id=\"body\"><a class=\"markdownIt-Anchor\" href=\"#body\">#</a> body</h3>\n<p>非必填，此次提交的详细描述，主要描述改动之前的情况及修改动机，对于小的修改不作要求，但是重大需求、更新等必须添加 body 来作说明。</p>\n<h3 id=\"footer\"><a class=\"markdownIt-Anchor\" href=\"#footer\">#</a> footer</h3>\n<p>footer 只用于以下两种情况</p>\n<ul>\n<li>break changes</li>\n</ul>\n<p>break changes 指明是否产生了破坏性修改，涉及 break changes 的改动必须指明该项，类似版本升级、接口参数减少、接口删除、迁移等，以 <code>BREAKING CHANGE：</code> 开头，后面是变动的描述、变动的理由以及迁移的方法。</p>\n<ul>\n<li>关闭 issue</li>\n</ul>\n<p>当前提交修改了某个 issue</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://wait-you.github.io/2023/06/06/JAVA%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/",
            "url": "https://wait-you.github.io/2023/06/06/JAVA%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/",
            "title": "JAVA并发编程",
            "date_published": "2023-06-06T00:42:26.000Z",
            "content_html": "<h1 id=\"java并发编程\"><a class=\"markdownIt-Anchor\" href=\"#java并发编程\">#</a> JAVA 并发编程</h1>\n<h2 id=\"进程与线程\"><a class=\"markdownIt-Anchor\" href=\"#进程与线程\">#</a> 进程与线程</h2>\n<h3 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\">#</a> 进程</h3>\n<ul>\n<li>程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至 CPU，数据加载至内存。在指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存、管理 IO 的</li>\n<li>当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。</li>\n<li>进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）</li>\n</ul>\n<h3 id=\"线程\"><a class=\"markdownIt-Anchor\" href=\"#线程\">#</a> 线程</h3>\n<ul>\n<li>一个进程内可以分为一到多个线程</li>\n<li>一个进程就是一个指令流，将指令流中的一条条指令以一定的顺序交给 CPU 执行</li>\n<li>Java 中，线程作为最小的调度单位，进程作为资源分配的最小单位。在 windows 中进程是不活动的，只是作为线程的容器</li>\n</ul>\n<h3 id=\"二者对比\"><a class=\"markdownIt-Anchor\" href=\"#二者对比\">#</a> 二者对比</h3>\n<ul>\n<li>进程基本上是相互独立的，而线程存在于进程内，是进程的一个子集</li>\n<li>进程拥有共享的资源，如内存空间等，供其内部的线程共享</li>\n<li>进程间通信较为复杂\n<ul>\n<li>同一台计算机的进程通信称为 IPC（Inter-process commucation）</li>\n<li>不同计算机之间的进程通信，需要通过网络，并遵守共同的协议，例如 HTTP</li>\n</ul>\n</li>\n<li>线程通信相对简单，因为他们共享进程内的内存，一个例子是多个线程可以访问同一个共享变量</li>\n<li>线程更轻量，线程上下文切换成本一般要比进程上下文切换低</li>\n</ul>\n<h3 id=\"并行与并发\"><a class=\"markdownIt-Anchor\" href=\"#并行与并发\">#</a> 并行与并发</h3>\n<p>单核 cpu 下，线程实际还是串行执行的。操作系统有一个组件叫做任务调度器，将 cpu 的时间片（windows 下时间片最小约为 15 毫秒）分给不同的线程使用，只是由于 cpu 在线程间（时间片很短）的切换非常快，人类感觉是同时运行的。总结一句话就是： <code>微观串行，宏观并行</code></p>\n<p>一般会将这种线程轮流使用 cpu 的做法称为并发，concurrent</p>\n<p>多核 cpu 下，每个核（core）都可以调度运行线程，这时候线程是可以并行的</p>\n<ul>\n<li>并发（concurrent）是同一时间应对（dealing with）多件事情的能力</li>\n<li>并行（parallel）是同一时间动手做（doing）多件事情的能力</li>\n</ul>\n<h3 id=\"应用\"><a class=\"markdownIt-Anchor\" href=\"#应用\">#</a> 应用</h3>\n<h4 id=\"应用之异步调用案例1\"><a class=\"markdownIt-Anchor\" href=\"#应用之异步调用案例1\">#</a> 应用之异步调用（案例 1）</h4>\n<p>从方法调用的角度来讲，如果</p>\n<ul>\n<li>需要等待结果返回，才能继续运行就是同步</li>\n<li>不需要等待结果返回，就能继续运行的就是异步</li>\n</ul>\n<p>注意：同步在多线程中还有另外一层意思，是让多个线程步调一致</p>\n<h5 id=\"1设计\"><a class=\"markdownIt-Anchor\" href=\"#1设计\">#</a> 1) 设计</h5>\n<p>多线程可以让方法执行变为异步的（即不要干巴巴的等着）比如说读取磁盘文件时，假设读取操作花费了 5 秒钟，如果没有线程调度机制，这 5 秒调用者什么都做不了，其他代码都得暂停…</p>\n<h5 id=\"2结论\"><a class=\"markdownIt-Anchor\" href=\"#2结论\">#</a> 2) 结论</h5>\n<ul>\n<li>比如在项目中，视频文件需要转换格式等操作比较费时，这时开一个新线程处理视频转换，避免阻塞主线程</li>\n<li>tocmat 的异步 servlet 也是类似的目的，让用户线程处理耗时教程的操作，避免阻塞 tomcat 的工作线程</li>\n<li>ui 程序中，开线程进行其他操作，避免阻塞 ui 线程</li>\n</ul>\n<h4 id=\"应用之提高效率案例2\"><a class=\"markdownIt-Anchor\" href=\"#应用之提高效率案例2\">#</a> 应用之提高效率（案例 2）</h4>\n<p>充分利用多核 cpu 的优势，提高运行效率。想想下面的场景，执行三个运算，最后将计算结果汇总</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">计算1 花费 10ms</span><br><span class=\"line\"></span><br><span class=\"line\">计算2 花费 11ms</span><br><span class=\"line\"></span><br><span class=\"line\">计算3 花费 9ms</span><br><span class=\"line\"></span><br><span class=\"line\">汇总需要 1ms</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>如果是串行执行，那么总共花费的时间是 10 + 11 + 9 + 1 = 31ms</li>\n<li>但如果是四核 cpu，各个核心分别使用线程 1 执行计算 1，线程 2 执行计算 2，线程 3 执行计算 3，那么三个线程是并行的，花费时间只取决于最长的那个线程运行的时间，即 11ms 最后汇总时间只会花费 12ms</li>\n</ul>\n<blockquote>\n<p><strong>注意</strong></p>\n<p>需要在多核 cpu 才能提高效率，单核仍然是轮流运行</p>\n</blockquote>\n<h5 id=\"1设计-2\"><a class=\"markdownIt-Anchor\" href=\"#1设计-2\">#</a> 1) 设计</h5>\n<h5 id=\"2结论-2\"><a class=\"markdownIt-Anchor\" href=\"#2结论-2\">#</a> 2) 结论</h5>\n<ol>\n<li>单核 cpu 下，多线程不能实际提高程序运行效率，只是为了能够在不同的任务之间切换，不同线程轮流使用 cpu，不至于一个线程总占用 cpu，别的线程没法干活</li>\n<li>多核 cpu 可以并行跑多个线程，但能否提高程序运行效率还是要分情况的\n<ul>\n<li>有些任务，经过精心设计，将任务拆分，并行执行，当然可以提高程序的运行效率。但不是所有计算任务都能拆分（参考后文的【阿姆达尔定律】）</li>\n<li>也不是所有任务都需要拆分，任务的目的如果不同，谈拆分和效率没啥意义</li>\n</ul>\n</li>\n<li>IO 操作不占用 cpu，只是我们一般拷贝文件使用的是【阻塞 IO】，这时相当于线程虽然不使用 cpu，但需要一直等待 IO 结束，没能充分利用线程，所有才有后面的【非阻塞 IO】和【异步 IO】优化</li>\n</ol>\n<h2 id=\"java线程\"><a class=\"markdownIt-Anchor\" href=\"#java线程\">#</a> Java 线程</h2>\n<h3 id=\"创建和运行线程\"><a class=\"markdownIt-Anchor\" href=\"#创建和运行线程\">#</a> 创建和运行线程</h3>\n<h4 id=\"方法一直接使用thread\"><a class=\"markdownIt-Anchor\" href=\"#方法一直接使用thread\">#</a> 方法一，直接使用 Thread</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Thread</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>()&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//要执行的任务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//启动线程</span></span><br><span class=\"line\">t.start();</span><br></pre></td></tr></table></figure></div>\n<p>例如：</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构造方法的参数是给线程指定的名字，推荐</span></span><br><span class=\"line\"><span class=\"type\">Thread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>()&#123;</span><br><span class=\"line\"> \t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//要执行的任务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动线程</span></span><br><span class=\"line\">t1.start();</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"方法二使用runnable配合thread\"><a class=\"markdownIt-Anchor\" href=\"#方法二使用runnable配合thread\">#</a> 方法二，使用 Runnable 配合 Thread</h4>\n<p>把【线程】和【任务】（要执行的代码）分开</p>\n<ul>\n<li>Thread 代表线程</li>\n<li>Runnable 可运行的任务（线程要执行的代码）</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Runnable</span> <span class=\"variable\">runnable</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Runnable</span>()&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//要执行的任务</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建线程对象</span></span><br><span class=\"line\"><span class=\"comment\">//参数1 是 任务对象 ； 参数2 是 线程名字 </span></span><br><span class=\"line\"><span class=\"type\">Thread</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(runnable, <span class=\"string\">&quot;t2&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//启动线程</span></span><br><span class=\"line\">t.start();</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"原理之thread和runnable的关系\"><a class=\"markdownIt-Anchor\" href=\"#原理之thread和runnable的关系\">#</a> 原理之 Thread 和 Runnable 的关系</h4>\n<p><strong>小结</strong></p>\n<ul>\n<li>方法 1 是把线程和任务合并在了一起，方法 2 是把线程和任务分开了</li>\n<li>用 Runnable 更容易与线程池等高级 API 配合</li>\n<li>用 Runnable 让任务脱离了 Thread 继承体系，更灵活</li>\n</ul>\n<h4 id=\"方法三futuretask配合thread\"><a class=\"markdownIt-Anchor\" href=\"#方法三futuretask配合thread\">#</a> 方法三，FutureTask 配合 Thread</h4>\n<p>FutureTask 能够接收 Callable 类型的参数，用来处理有返回结果的情况</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建任务对象</span></span><br><span class=\"line\">FutureTask&lt;Integer&gt; task3 = <span class=\"keyword\">new</span> <span class=\"title class_\">FutureTask</span>&lt;&gt;(<span class=\"keyword\">new</span> <span class=\"title class_\">Callable</span>&lt;Integer&gt;() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;hello&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">task3 = <span class=\"keyword\">new</span> <span class=\"title class_\">FutureTask</span>&lt;Integer&gt;(() -&gt; &#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;hello&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//参数1 是 任务对象； 参数2 是 线程名字</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(task3, <span class=\"string\">&quot;t3&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//主线程阻塞，同步等待task执行完毕的结果</span></span><br><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> task3.get();</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;结果是:&#123;&#125;&quot;</span>, result);</span><br></pre></td></tr></table></figure></div>\n<p>​</p>\n<h3 id=\"查看进程的方法\"><a class=\"markdownIt-Anchor\" href=\"#查看进程的方法\">#</a> 查看进程的方法</h3>\n<h4 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\">#</a> windows</h4>\n<ul>\n<li>任务管理器可以查看进程数和线程数，也可以用来杀死进程</li>\n<li>tasklist 查看进程</li>\n<li>taskkill 杀死进程</li>\n</ul>\n<h4 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\">#</a> linux</h4>\n<ul>\n<li>ps -ef 查看所有进程</li>\n<li>ps -fT -p <pid>查看某个进程（PID）的所有线程</li>\n<li>kill 杀死进程</li>\n<li>top 按大写 H 切换是否显示进程</li>\n<li>top -H -p <PID> 查看某个进程 （PID）的所有线程</li>\n</ul>\n<h4 id=\"java\"><a class=\"markdownIt-Anchor\" href=\"#java\">#</a> Java</h4>\n<ul>\n<li>jps 查看所有的 Java 进程</li>\n<li>jstack <PID> 查看某个 Java 进程（PID）的所有线程状态</li>\n<li>jconsole 来查看某个 Java 进程中线程的运行情况（图形界面）</li>\n</ul>\n<p>jconsole 远程监控配置</p>\n<ul>\n<li>\n<p>需要以如下方式运行你的 Java 类</p>\n<ul>\n<li>\n<div class=\"highlight-container\" data-rel=\"Shell\"><figure class=\"iseeu highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">-Djava.rmi.server.hostname</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>ip地址<span class=\"token variable\">`</span></span> <span class=\"token parameter variable\">-Dcom.sun.management.jmxremote</span> <span class=\"token parameter variable\">-Dcom.sun.management.jmxremote.port</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>连接端口<span class=\"token variable\">`</span></span> <span class=\"token parameter variable\">-Dcom.sun.management.jmxremote.sll</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>是否安全连接<span class=\"token variable\">`</span></span> <span class=\"token parameter variable\">-Dcom.sun.management.jmxremote.authenticate</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>是否认证<span class=\"token variable\">`</span></span> java类</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--code￼5--<span class=\"token operator\">></span></pre></td></tr></table></figure></div></li>\n</ul>\n</li>\n<li>\n<p>可以用 wait 或条件变量达到类似的效果</p>\n</li>\n<li>\n<p>不同的是，后两种条件都需要加锁，并且需要相应的唤醒操作，一般适用于要进行同步的场景</p>\n</li>\n<li>\n<p>sleep 适用于无锁 的同步的场景</p>\n</li>\n</ul>\n<h4 id=\"两阶段终止模式\"><a class=\"markdownIt-Anchor\" href=\"#两阶段终止模式\">#</a> 两阶段终止模式</h4>\n<p>Two Phase Termination</p>\n<p>在一个线程 T1 中如何 “优雅” 终止线程 T2？这里的【优雅】指的是给 T2 一个料理后事得到机会</p>\n<h6 id=\"1错误思路\"><a class=\"markdownIt-Anchor\" href=\"#1错误思路\">#</a> 1. 错误思路</h6>\n<ul>\n<li>使用线程对象的 stop () 方法终止线程\n<ul>\n<li>stop 方法会真正杀死线程，如果这时对线程锁住了共享资源，那么当他被杀死后就再也没有机会释放锁，其他线程将永远无法获取锁</li>\n</ul>\n</li>\n<li>使用 System.exit (int) 方法停止线程\n<ul>\n<li>目的仅是停止一个线程，但这种做法会让整个程序都停止</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"2两阶段终止模式\"><a class=\"markdownIt-Anchor\" href=\"#2两阶段终止模式\">#</a> 2. 两阶段终止模式</h6>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220310201758451.png\"\n                      alt=\"image-20220310201758451\"\n                ></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TwoPhaseTermination</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Thread monitor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> Logger.getLogger(<span class=\"string\">&quot;c.TwoPhaseTermination&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 启动监控线程</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        monitor = <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                <span class=\"type\">Thread</span> <span class=\"variable\">current</span> <span class=\"operator\">=</span> Thread.currentThread();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (current.isInterrupted())&#123;</span><br><span class=\"line\">                    logger.log(Level.INFO, <span class=\"string\">&quot;料理后事&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1000</span>); <span class=\"comment\">//情况1</span></span><br><span class=\"line\">                    logger.log(Level.INFO, <span class=\"string\">&quot;执行监控记录&quot;</span>); <span class=\"comment\">//情况2</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                    <span class=\"comment\">//重新设置打断标记</span></span><br><span class=\"line\">                    current.interrupt();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        monitor.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 停止监控线程</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stop</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        monitor.interrupt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"主线程与守护线程\"><a class=\"markdownIt-Anchor\" href=\"#主线程与守护线程\">#</a> 主线程与守护线程</h3>\n<p>默认情况下，Java 进程需要等待所有线程都运行结束，才会结束，有一种特殊的线程叫做守护线程（通过 setDdaemon (true) 设置），只要其他非守护线程运行结束了，即使守护线程的代码没有执行完，也会强制结束</p>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>垃圾回收器就是一种守护线程</li>\n<li>Tomcat 中的 Acceptor 和 Poller 线程都是守护线程，所以 Tomcat 接收到 shutdown 命令后，不会等待他们处理完当前请求</li>\n</ul>\n</blockquote>\n<h3 id=\"五种状态\"><a class=\"markdownIt-Anchor\" href=\"#五种状态\">#</a> 五种状态</h3>\n<p>这是从操作系统的层面来描述的</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220310220616173.png\"\n                      alt=\"image-20220310220616173\"\n                ></p>\n<ul>\n<li>【初始状态】仅是语言层面创建了线程对象，还未与操作系统线程关联</li>\n<li>【可运行状态】（就绪状态）指该线程已经被创建（与操作系统线程关联），可以由 CPU 调度执行</li>\n<li>【运行状态】指获取了 CPU 时间片运行中的状态\n<ul>\n<li>当 CPU 时间片用完，会从【运行状态】转换至【可运行状态】，会导致线程上下文切换</li>\n</ul>\n</li>\n<li>【阻塞状态】\n<ul>\n<li>如果调用了阻塞 API，如 BIO 读写文件，这时线程实际不会用到 CPU，会导致线程上下文切换，进入【阻塞状态】</li>\n<li>带 BIO 操作完毕，会由操作系统唤醒阻塞的线程，转换至【可运行状态】</li>\n<li>与【可运行状态】的区别是，对【阻塞状态】的线程来说只要他们一直不唤醒，调度器就一直不会考虑调度他们</li>\n</ul>\n</li>\n<li>【终止状态】\n<ul>\n<li>表示线程已经执行完毕，生命周期已经结束，不会再转换为其他状态</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"六种状态\"><a class=\"markdownIt-Anchor\" href=\"#六种状态\">#</a> 六种状态</h3>\n<p>这是从 Java API 层面来描述的</p>\n<p>根据 Thread.State 枚举，分为六种状态</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220310221423039.png\"\n                      alt=\"image-20220310221423039\"\n                ></p>\n<ul>\n<li>NEW 线程刚刚被创建，但是还没有调用 start () 方法</li>\n<li>RUNNABLE 当调用了 start () 方法之后，注意，Java API 层面的 RUNNABLE 状态涵盖了操作系统层面的【可运行状态】、【运行状态】、【阻塞状态】（由于 BIO 导致的线程阻塞，在 Java 里面无法区分，仍然认为是可运行的）</li>\n<li>BLOCKED、WAITING (join)、TIMED_WAITING (sleep) 都是 JAVA API 对【阻塞状态】的细分</li>\n<li>TERMINATED 当线程代码运行结束</li>\n</ul>\n<h3 id=\"共享模型之管程\"><a class=\"markdownIt-Anchor\" href=\"#共享模型之管程\">#</a> 共享模型之管程</h3>\n<ul>\n<li>共享问题</li>\n<li>sychronized</li>\n<li>线程安全分析</li>\n<li>Monitor</li>\n<li>wait/notify</li>\n<li>线程状态转换</li>\n<li>活跃性</li>\n<li>Lock</li>\n</ul>\n<h4 id=\"临界区-critical-section\"><a class=\"markdownIt-Anchor\" href=\"#临界区-critical-section\">#</a> 临界区 Critical Section</h4>\n<ul>\n<li>一个程序运行多个线程本身是没有问题的</li>\n<li>问题出现在多个线程访问<strong>共享资源</strong>\n<ul>\n<li>多个线程读<strong>共享资源</strong>其实也没有问题</li>\n<li>在多个线程对共享资源读写操作时发生指令交错，就会出现问题</li>\n</ul>\n</li>\n<li>一段代码内如果存在对<strong>共享资源</strong>的多个线程读写操作，就称这段代码为临界区</li>\n</ul>\n<h4 id=\"synchronized-解决方案\"><a class=\"markdownIt-Anchor\" href=\"#synchronized-解决方案\">#</a> synchronized 解决方案</h4>\n<h5 id=\"应用之互斥\"><a class=\"markdownIt-Anchor\" href=\"#应用之互斥\">#</a> <strong>应用之互斥</strong></h5>\n<p>为了避免临界区的竞态条件发生，有多种手段可以达到目的</p>\n<ul>\n<li>阻塞式的解决方案：synchronized、Lock</li>\n<li>非阻塞式的解决方案：原子变量</li>\n</ul>\n<p>本次使用阻塞式的方案：synchronized，来解决上述方案，即俗称的【对象锁】，它采用互斥的方式让同一时刻至多有一个线程能持有【对象锁】</p>\n<p>synchronized</p>\n<p>语法</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">synchronized</span>(对象)&#123; <span class=\"comment\">//线程1， 线程2（blocked）</span></span><br><span class=\"line\">    临界区</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">counter</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">Object</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Objcect</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span>(lock)&#123;</span><br><span class=\"line\">                counter++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;t1&quot;</span>).start();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span>(lock)&#123;</span><br><span class=\"line\">                counter--</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;t2&quot;</span>).start();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"方法上的synchronized\"><a class=\"markdownIt-Anchor\" href=\"#方法上的synchronized\">#</a> 方法上的 synchronized</h4>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//等价于</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span>(<span class=\"built_in\">this</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//等价于</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span>(Test.class)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h4 id=\"变量的线程安全分析\"><a class=\"markdownIt-Anchor\" href=\"#变量的线程安全分析\">#</a> 变量的线程安全分析</h4>\n<p>成员变量和静态变量是否是线程安全的？</p>\n<ul>\n<li>如果他们没有共享，则线程安全</li>\n<li>如果他们被共享了，根据他们的状态是否能够改变，又分两种情况\n<ul>\n<li>如果只有读操作，则线程安全</li>\n<li>如果有读写操作，则这段代码是临界区，则需要考虑线程安全</li>\n</ul>\n</li>\n</ul>\n<p>局部变量是否是线程安全？</p>\n<ul>\n<li>局部变量是线程安全的</li>\n<li>但局部变量引用的对象则未必\n<ul>\n<li>如果该对象没有逃离方法的作用范围，他是线程安全的\n<ul>\n<li>如果该对象逃离方法的作用范围，则需要考虑线程安全</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常见线程安全类\"><a class=\"markdownIt-Anchor\" href=\"#常见线程安全类\">#</a> 常见线程安全类</h3>\n<ul>\n<li>String</li>\n<li>Integer</li>\n<li>StringBuffer</li>\n<li>Random</li>\n<li>Vector</li>\n<li>HashTable</li>\n<li>java.util.concurrent 的类</li>\n</ul>\n<p>他们每个类的方法是原子性的</p>\n<p>但是多个方法的组合不是原子性的</p>\n",
            "tags": [
                "java"
            ]
        }
    ]
}
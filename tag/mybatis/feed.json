{
    "version": "https://jsonfeed.org/version/1",
    "title": "玖忆 • All posts by \"mybatis\" tag",
    "description": "我本微末凡尘、可也心向天空",
    "home_page_url": "https://wait-you.github.io",
    "items": [
        {
            "id": "https://wait-you.github.io/2023/06/06/Mybatis%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%95%88%E7%8E%87%E5%AF%B9%E6%AF%94/",
            "url": "https://wait-you.github.io/2023/06/06/Mybatis%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%95%88%E7%8E%87%E5%AF%B9%E6%AF%94/",
            "title": "Mybatis批量插入数据的三种方式效率对比",
            "date_published": "2023-06-06T01:01:14.000Z",
            "content_html": "<h1 id=\"mybatis批量插入数据的三种方式效率对比\"><a class=\"markdownIt-Anchor\" href=\"#mybatis批量插入数据的三种方式效率对比\">#</a> Mybatis 批量插入数据的三种方式效率对比</h1>\n<ul>\n<li>写项目碰到一个场景，解析从前端传来的 excel 文件，然后逐行添加到数据库中，当当因为是逐行添加，如果采用传统的一行创建一个 sql 的花，效率是比较低的，所以采用批量添加的方式，以下为三种插入数据方式的对比：</li>\n</ul>\n<h2 id=\"逐行insert\"><a class=\"markdownIt-Anchor\" href=\"#逐行insert\">#</a> 逐行 insert</h2>\n<p>首先来看代码：</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SubjectListener</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AnalysisEventListener</span>&lt;SubjectEeVo&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 锁</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SubjectMapper subjectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invoke</span><span class=\"params\">(SubjectEeVo subjectEeVo, AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Subject</span> <span class=\"variable\">subject</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Subject</span>();</span><br><span class=\"line\">            <span class=\"comment\">//SubjectEeVo -&gt; Subject</span></span><br><span class=\"line\">            BeanUtils.copyProperties(subjectEeVo, subject);</span><br><span class=\"line\">            <span class=\"comment\">//添加</span></span><br><span class=\"line\">            subjectMapper.insert(subject);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doAfterAllAnalysed</span><span class=\"params\">(AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>因为 spring 由 ioc 创建的对象默认为单例类，所以会出现线程安全问题，这里采用 <code>reentranlock</code>  来解决这个问题，以下是执行时间：</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220818094722514.png\"\n                      alt=\"image-20220818094722514\"\n                ></p>\n<h2 id=\"mybatis-的-batch-模式\"><a class=\"markdownIt-Anchor\" href=\"#mybatis-的-batch-模式\">#</a> mybatis 的 batch 模式</h2>\n<p>mybatis 是由一个 batch, 也就是批量模式，在配置类中添加 <code>sqlSession</code> ，设定为主要的 <code>bean</code></p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@MapperScan(&quot;cn.wenhe9.ggkt.*.mapper&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MybatisPlusConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 新的分页插件,一缓和二缓遵循mybatis的规则,需要设置 MybatisConfiguration#useDeprecatedExecutor = false 避免缓存出现问题(该属性会在旧插件移除后一同移除)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> MybatisPlusInterceptor <span class=\"title function_\">mybatisPlusInterceptor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MybatisPlusInterceptor</span> <span class=\"variable\">interceptor</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MybatisPlusInterceptor</span>();</span><br><span class=\"line\">        interceptor.addInnerInterceptor(<span class=\"keyword\">new</span> <span class=\"title class_\">PaginationInnerInterceptor</span>(DbType.H2));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> interceptor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ConfigurationCustomizer <span class=\"title function_\">configurationCustomizer</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> configuration -&gt; configuration.setUseDeprecatedExecutor(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 开启批量添加模式</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@Primary</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SqlSession <span class=\"title function_\">sqlSession</span><span class=\"params\">(SqlSessionTemplate sqlSessionTemplate)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqlSessionTemplate.getSqlSessionFactory().openSession(ExecutorType.BATCH, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n<p>业务代码不需要变更:</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SubjectListener</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AnalysisEventListener</span>&lt;SubjectEeVo&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 锁</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SubjectMapper subjectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invoke</span><span class=\"params\">(SubjectEeVo subjectEeVo, AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Subject</span> <span class=\"variable\">subject</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Subject</span>();</span><br><span class=\"line\">            <span class=\"comment\">//SubjectEeVo -&gt; Subject</span></span><br><span class=\"line\">            BeanUtils.copyProperties(subjectEeVo, subject);</span><br><span class=\"line\">            <span class=\"comment\">//添加</span></span><br><span class=\"line\">            subjectMapper.insert(subject);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doAfterAllAnalysed</span><span class=\"params\">(AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>时间略微提升：<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220818095032494.png\"\n                      alt=\"image-20220818095032494\"\n                ></p>\n<h2 id=\"构建批量插入sql\"><a class=\"markdownIt-Anchor\" href=\"#构建批量插入sql\">#</a> 构建批量插入 sql</h2>\n<p>这种方式效率是最高的，但也有参数最大数量上限或者 sql 条数的限制或者 sql 语句大小有所限制，这个是由不同的数据库由不同的限制，mysql 语句的长度限制为<strong> 4MB</strong></p>\n<p>同样有并发问题，因为需要将每行的数据添加到集合中，再调用一次的 sql 来执行，并且这里是写多读少的情况，所以这里使用 <code>ThreadLocal</code>  来实现</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SubjectListener</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AnalysisEventListener</span>&lt;SubjectEeVo&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ThreadLocal&lt;List&lt;Subject&gt;&gt; subjectTL = <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadLocal</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SubjectMapper subjectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invoke</span><span class=\"params\">(SubjectEeVo subjectEeVo, AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">        List&lt;Subject&gt; subjectList = subjectTL.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (subjectList == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            subjectList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">            subjectTL.set(subjectList);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">Subject</span> <span class=\"variable\">subject</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Subject</span>();</span><br><span class=\"line\">        <span class=\"comment\">//SubjectEeVo -&gt; Subject</span></span><br><span class=\"line\">        BeanUtils.copyProperties(subjectEeVo, subject);</span><br><span class=\"line\">        <span class=\"comment\">//添加</span></span><br><span class=\"line\">        subjectList.add(subject);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doAfterAllAnalysed</span><span class=\"params\">(AnalysisContext analysisContext)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            List&lt;Subject&gt; subjectList = subjectTL.get();</span><br><span class=\"line\">            subjectMapper.insertBatch(subjectList);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            subjectTL.remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<p>这里对 <code>mapper</code>  和 <code>xml</code>  文件进行修改，新增 <code>insertBatch</code>  批量插入的方法</p>\n<div class=\"highlight-container\" data-rel=\"Java\"><figure class=\"iseeu highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">SubjectMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Subject&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 批量插入数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">insertBatch</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;subjectList&quot;)</span> List&lt;Subject&gt; subjectList)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<div class=\"highlight-container\" data-rel=\"Xml\"><figure class=\"iseeu highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span> <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;cn.wenhe9.ggkt.vod.mapper.SubjectMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertBatch&quot;</span>&gt;</span></span><br><span class=\"line\">        insert into `subject`</span><br><span class=\"line\">            (`id`, `title`, `parent_id`, `sort`)</span><br><span class=\"line\">        values </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;subjectList&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;subject&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span>&gt;</span></span><br><span class=\"line\">            (#&#123;subject.id&#125;, #&#123;subject.title&#125;, #&#123;subject.parentId&#125;, #&#123;subject.sort&#125;)</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>可以看到效率提高了将近一半</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://tuchuang.wenhe9.cn/image-20220818094543492.png\"\n                      alt=\"image-20220818094543492\"\n                ></p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这里测试的 excel 行数较少，数据可能不够准确，但也足以说明问题</p>\n<p><strong>构建批量插入 sql</strong>  &gt; <strong>mybatis 的 batch 模式</strong> &gt; <strong>逐行 insert</strong></p>\n",
            "tags": [
                "MyBatis"
            ]
        }
    ]
}